
-------------ThymeLeaf 3.x 
<dependency>
    <groupId>org.thymeleaf</groupId>
    <artifactId>thymeleaf</artifactId>
    <version>3.0.11.RELEASE</version>
</dependency>
<dependency>
    <groupId>org.thymeleaf</groupId>
    <artifactId>thymeleaf-spring5</artifactId>
    <version>3.0.11.RELEASE</version>
</dependency>
<dependency>
    <groupId>org.thymeleaf.extras</groupId>
    <artifactId>thymeleaf-extras-springsecurity5</artifactId>
    <version>3.0.4.RELEASE</version>
</dependency>

 --- thymeleaf-3.0.11.RELEASE.jar 
		ognl-3.1.12.jar
		javassist-3.20.0-GA.jar
		attoparser-2.0.5.RELEASE.jar
		unbescape-1.1.6.RELEASE.jar


ServletContextTemplateResolver resolver = new ServletContextTemplateResolver(servletContext);
resolver.setPrefix("/WEB-INF/thymeleaf/");
resolver.setCharacterEncoding("UTF-8");
resolver.setTemplateMode(TemplateMode.HTML);
//二选一
//resolver.setTemplateMode(TemplateMode.TEXT); 
//resolver.setTemplateMode(TemplateMode.JAVASCRIPT);
 

resolver.setCacheable(false);//默认是true,即缓存的,false只用于开发使用
//resolver.getCacheablePatternSpec().addPattern("/users/*");
//resolver.setCacheTTLMs(60000L);// 1 minute

TemplateEngine engine = new TemplateEngine();
engine.setTemplateResolver(resolver);
//engine存在servletContext中,用于取

response.setCharacterEncoding("utf-8");
//response.setContentType("text/plain");
//response.setContentType("application/x-javascript"); 

WebContext context = new WebContext(request, response, request.getServletContext());        
context.setVariable("name", "李四");


Employee emp=new Employee();
emp.setEmployee_id(100);
emp.setFirst_name("张");
emp.setLast_name("三");
emp.setSalary(8000.00);

Calendar calendar= Calendar.getInstance();
calendar.set(Calendar.DAY_OF_MONTH, calendar.get(Calendar.DAY_OF_MONTH)-1);

DateRange range=new DateRange();
range.setBeginTime(calendar.getTime());
range.setEndTime(new Date());
emp.setCreateTimeRange(range);
emp.setHobby("football");
context.setVariable("currentUser", emp);

List<NamValuePair> hobbys=new ArrayList<>();
hobbys.add(new NamValuePair("足球","football"));
hobbys.add(new NamValuePair("篮球","basketball")); 
context.setVariable("hobbys", hobbys);

List<Employee> emps=new ArrayList< >();
for(int i=0;i<10;i++)
{
	Employee empTmp=new Employee();
	empTmp.setEmployee_id(10+i);
	empTmp.setFirst_name("张"+i);
	empTmp.setLast_name("三"+i);
	empTmp.setSalary(8000.00+i); 
	empTmp.setCreateTimeRange(range);
	emps.add(empTmp);
} 
context.setVariable("allEmps", emps);
context.setVariable("serverHTML", "<p style='color:red'>内容<p>"); 


engine.process("servletHtml.html", context, response.getWriter());
//二选一
//engine.process("servletText.csv", context, response.getWriter());
//engine.process("servletJS.js", context, response.getWriter());

---common.html
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
</head>
<body>
	<div th:fragment="headerArea">
		common header Area 头部区
		(被引用的页也要加html标签, head标签加 meta charset="UTF-8"才不会乱码,生成的会过滤多的html标签)
	</div>
	<div th:fragment="advertArea">
		这里是common页的广告区
	</div>

	<div id="myDiv">
	   myDiv 
	</div>

</body>
</html>
---/WEB-INF/thymeleaf/servletHtml.html  有标准的html head body标签
 
 标准方言 以th前缀开头的属性 , 模板是有缓存的<br/>
 <p>
	 Hello <span th:text="${name}"></span>!
 </p>
 
 <div>
	beginTime: <span th:text="${currentUser.createTimeRange.beginTime}"></span>
 </div>
 
 <div th:object="${currentUser}"> 
	first_name:  <span th:text="*{first_name}"> </span> *{ 是上面的th:object属性的${子级  ,像JS的 with(currentUser) 
 </div>
  
 context1:<span th:text="${#httpServletRequest.getContextPath()}"></span> <br/>
 context2:<span th:text="${#servletContext.contextPath}"></span>  <br/> 
	  
 <a th:href="@{/jfreechart.jsp?id=1&name=中 }">  @{/ 带上下文路径  & 会被转议</a> <br/>
 <a th:href="@{~/contents/main}"> @{~ 没有上下文路径</a>  <br/> 
 <a th:href="@{//mycompany.com/res/initial}">@{// 协议 http,https 同浏览器 </a> <br/>
  

---- 定义代码片段  <br/>
 <div th:fragment="advertArea">
		这里是广告区
</div>

----引用代码片  <br/>
<div th:insert="common.html :: headerArea"></div>
<div th:insert="~{this :: advertArea}"></div>  ~{}是可选的,this是本页面
<div th:include="~{:: advertArea}"></div> this是可选的, include 只包括子标签内容  <br/>
<span th:replace="common.html :: headerArea"></span>th:replace  表示 不要自己的主标签，保留th:fragment的主标签  <br/>
<span th:replace="common.html :: #myDiv"></span> #表示引用页面中id="myDiv"   <br/>

<ul>
	<li th:each="hobby : ${hobbys}" th:text="${hobby.name}"></li>
 </ul>
列表写死在页面 :
<select   name="theHobby"  >
	   <option >--请选择--</option>
	   <option  th:selected="${currentUser.hobby eq 'football'}" value="football">足球</option>
	   <option  th:selected="${currentUser.hobby eq 'basketball'}"  value="basketball">篮球</option> 
  </select>    <br/>  
列表动态从服务取： 
 <select   name="theHobby"  >
	   <option >--请选择--</option>
	   <option th:each="item:${hobbys}" th:selected="${currentUser.hobby eq item.value}" th:text="${item.name}" th:value="${item.value}">xx</option> 
  </select>  <br/>

  form  th:action 属性 <br/>
 <form th:action="@{/createOrder}" th:object="${currentUser}">
 	  <label for="first_name">first_name:</label>
      <input type="text" th:field="*{first_name}" value="" /><br/>
      <!-- th:field生成HTML id,name相同  -->
       <label for="salary">salary:</label>
      <input type="text" th:field="*{salary}" value="" /><br/>
 </form>
 
<style type="text/css">
 .even
 {
	background-color: gray
 }
 .odd{
	background-color: pink
 }
</style>
<table border="1">
	<tbody>
		<tr th:each="row,rowStat : ${allEmps}" th:class="${rowStat.even}? 'even' : 'odd'">
			<td th:text="${rowStat.count}">对象的index(从1开始计算)，这只是注释没用的</td>
			<td th:text="${rowStat.index}">对象的index（从0开始计算）</td>
    		<td th:text="${rowStat.size}"> size:被迭代对象的大小</td>
    		<td th:text="${rowStat.even}">even/odd:布尔值，当前循环是否是偶数/奇数（从0开始计算）</td>
    		<td th:text="${rowStat.odd}">  </td>
    		<td th:text="${rowStat.first}">first是否是第一个</td>
    		<td th:text="${rowStat.last}">last是否是最后一个</td>
    		<td th:text="${rowStat.current}"> current:当前迭代变量</td>
    		<td th:text="${rowStat.current.first_name}"> current:first_name</td>
			<td th:text="${row.last_name}">last_name</td>
			<td th:text="${ '$' + #numbers.formatDecimal(row.salary, 1, 2)}" > salary </td>
			<td> <span th:if="${row.salary gt 1000}" style="color:red">高薪</span> </td>
		</tr>
	</tbody>
</table>

 <div th:if=" ${allEmps.size()} lt '3'">
 	lt 3
 </div>
 <div th:if=" ${allEmps.size()} gt '3'">
 	gt 3
 </div>

<dl>
	<dt>数字格式化:</dt>
	<dd th:text="${ '$' + #numbers.formatDecimal(currentUser.salary, 1, 2)}">x</dd>
	
	<dt>时间格式化:</dt>
	<dd th:text="${#dates.format(currentUser.createTimeRange.beginTime, 'yyyy-MM-dd')}">x</dd>
</dl>

 utext表示没有 escape <br/>
<p th:utext="${serverHTML}"> </p> 
<p th:text="${serverHTML}"> </p>



-----------servletText.csv
#https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#textual-template-modes


name:[(${name})]
name: [# th:utext="${name}" /]
[# th:if="${name}"]
	 'have name attr'
[/]

beginTime: [(${currentUser.createTimeRange.beginTime})]
userHobby: [(${currentUser.hobby})]

  #name,value,selected
[# th:each="item : ${hobbys}"]
   [# th:utext="${item.name}" /] , [(${item.value})],[(${currentUser.hobby eq item.value})]
[/]
 
 
  #th_block_name,value,selected
[#th:block th:each="item : ${hobbys}"]
   [#th:block th:utext="${item.name}" /] , [#th:block th:utext="${item.value}" /], [#th:block th:utext="${currentUser.hobby eq item.value}" /]
[/th:block]

count(从1开始),index(从0开始),size,even布尔值 是否 偶数(从0开始),odd 是否 奇数,first,last,current,current.first_name,last name,salary,高薪吗
[# th:each="row,rowStat : ${allEmps}"]
   [(${rowStat.count})],  [(${rowStat.index})], [(${rowStat.size})],  [(${rowStat.even})],  [(${rowStat.odd})],  [(${rowStat.first})],  [(${rowStat.last})],  [(${rowStat.current})],  [(${rowStat.current.first_name})],   [(${row.last_name})],   [(${'$' + #numbers.formatDecimal(row.salary, 1, 2)})],  [(${row.salary gt 1000})],  
[/]


/*[- */
	'this is comment code ,only for TEXT and javascript and css'
/* -]*/

 
/*[- this is comment code ,only for TEXT,can multi line  -]*/

-----servletJS.js


var username = [[${name}]]; //两个[[  中文变成 \uxxxx自动增加" "
console.log('from javascript template hello :'+username);

[# th:if="${name}"]
console.log('have name attr');
[/]

[# th:each="item : ${hobbys}"]    
	console.log([[${item.name}]] + " " + [[${item.value}]]);
[/]


[# th:if="${allEmps.size() lt 3}"]
	console.log('lt 3');
[/]
[# th:if="${allEmps.size() gt 3}"]
	console.log('gt 3');
[/] 

/*[+
	alert('this is normal code ,only for javascript and css');
+]*/

	
/*[- */
	alert('this is comment code ,only for TEXT and javascript and css');
/* -]*/

console.log(  /*  [[${name}]]  */ "inline comment  only for javascript and css ");

/*[# th:if="${namexx}"]*/
	console.log('comment test , only for javascript and css ');
/*[/]*/


[# th:if="${namexx}"]
	console.log('namexx');
[/] 

[# th:if="${name}"]
	console.log('name');
[/]

========================Spring MVC

 <!--  开发测试时 cacheable 为false   -->
<bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
	<property name="prefix" value="/WEB-INF/thymeleaf/" />
	<property name="suffix" value=".xhtml" />
	<property name="cacheable" value="false"></property> 
	<property name="templateMode" value="HTML" />
	<property name="characterEncoding" value="UTF-8"/>
</bean>

<bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
	<property name="templateResolver" ref="templateResolver"></property>
</bean>	
<bean  class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
	<property name="templateEngine" ref="templateEngine" />
	<property name="characterEncoding" value="UTF-8"/>
</bean>
<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
<property name="basename" value="spring_thymeleaf.messages" />
</bean>

@ModelAttribute("allEmps")
public List<Employee> populateEmps() {
	List<Employee> emps=new ArrayList< >();
	for(int i=0;i<10;i++)
	{
		Employee emp=new Employee();
		emp.setEmployee_id(10+i);
		emp.setFirst_name("张"+i);
		emp.setLast_name("三"+i);
		emp.setSalary(8000.00+i);

		Calendar calendar= Calendar.getInstance();
		calendar.set(Calendar.DAY_OF_MONTH, calendar.get(Calendar.DAY_OF_MONTH)-1);
	   
		DateRange range=new DateRange();
		range.setBeginTime(calendar.getTime());
		range.setEndTime(new Date());
		emp.setCreateTimeRange(range);
		emps.add(emp);
	} 
	return emps;
} 
	
---spring_thymeleaf/messages_en_US.properties
title=title
welcome=welcome {0} !

 
 
 国际化 <br/>
 <p th:utext="#{title}"> </p>    
 <p th:utext="#{welcome(${name})}">  </p>
 
  ---spring EL表达式
  <p   th:text="${4 * -6 * -2 % 7}">结果是6</p>
  <p   th:text="${allEmps[2].first_name}">2 first_name</p>
  <p   th:text="${new java.util.Date().getTime()}">1545634654641</p>
  <p  th:text="${T(java.lang.Math).random()}">0.123</p>
 
 
 
 
 
 	