
https://www.jetbrains.com/help

有历史版本 下载界面中点 other version
https://www.jetbrains.com/idea/download/other.html  
https://www.jetbrains.com/clion/download/other.html
https://www.jetbrains.com/go/download/other.html

2020.1 版本位置变为 %USERPROFILE%\AppData\Local\JetBrains\IntelliJIdea2020.1
			linux变为	~/.cache/JetBrains/IntelliJIdea2020.1

-----markdown语法		
README.md 文件是,idea可以识别，firefox 安装插件 markdown viewer ，右上角有一个m图标，拖入文件或输入file:///c
##		二级标题
###		三级标题
####	四级标题
> 表示引用的内容，即缩进
>- 缩进  并显示圆点式 项目符号
``` 这行文本显示高亮，如要多行，只要在首尾有```即可，像多行注释
**加粗** 也可多行，像多行注释
分隔线用 3个或以上的*或- 
[redis链接](doc/redis.md)  表示显示html链接
![提示文字](screenshot.png)表示显示图片

------ 

====================IntelliJ IDEA    要JDK1.8 才能启动64位版本
IDEA 2021.1		版本可以支持 JDK16

---缺点
默认情况下不能调试(debug)多线程，如要调试多线程，在每个线程代码中打断点，右击断点->单选Thread(默认All), set Default 
	run/debug窗口中右则有 个 Allow parallel run 的复选框( 2021.1 Community版本没有 ，对多线程调试支持很不好!!!)

intellij idea 一个main方法只可启动一次，如要多在配置启动项中取消  single instance only ( 2021.1 Community版本没有 ，对多线程调试支持很不好!!!)

---优点 
Git, Maven 支持不错


--idea.properties 有提示 idea.home.path ,windows路径使用/ 分隔,事先建立好D:/Program/idea_data即可
#idea.config.path=${user.home}/.IntelliJIdea/config
idea.config.path=D:/Program/idea_data/config

#这个目录有一些索引,下次启动会快
#idea.system.path=${user.home}/.IntelliJIdea/system
idea.system.path=D:/Program/idea_data/system

#idea.plugins.path=${idea.config.path}/plugins
idea.plugins.path=D:/Program/idea_data/plugins

会丢失破解的激活码

help->edit custom setting...->
提示%USERPROFILE%\.IntelliJIdea2018.2\config\idea.properties文件不存在创建->Create->
就可以写覆盖安装目录中的idea.properties


---JDK
File->project stucture ->project ->(默认选中SDKs标签) 配置JDK
	Global Librarie 标签配置库，默认带scala(安装插件后)

--Maven
	File->Other Settings-> Default Settings -> Build ,Execution,Deployemnt->Maven 中设置 maven home directory
	File->Settings-> 						   Build ,Execution,Deployemnt->Maven 中设置 maven home directory

	Run->Run...->建立运行maven时在command line中加 clean package -Dmaven.test.skip=true   (笔记本运行窗口太大,不能调整,不能选择下面的)
				如是java的main方法 建立Application

	右击多个项目->Maven-> Reimport  相当于eclipse的 maven -> update project ...
	右击多个项目-> Synchronized selected files  相当于eclipse的 refresh
	Maven project 视图 中选择项目 Plugins->install 或者展开jetty->jetty:run 同eclipse右击.pom文件的选择
	 eclipse是ctrl+点击<dependency>高亮整个进入pom,而intellij 点单独要<artifactId>中的值才能进入pom

	打开pom.xml 右击-> Diagrams--Show Dependencies  可以信赖的图形 (也可Maven Projects视图) 
	ctrl+左键拖动，移动位置,ctrl+中键滚动，放大缩小，ctrl+f找包名,按alt放大镜
	
	右击pom.xml-> maven-> open 'settings.xml'
 
--SVN 
	File -> Setting -> Version Control -> Subversion 配置 svn 命令所在路径
	(如是svn:// 协议地址,不能使用visual SVN(下载后是Apache-Subversion) 中的命令行客户端,
	可以使用SlikSvn,或者安装TortoiseSVN 取消这个配置)

	 
	VCS -> Enable Version Control Integeration..->选择SubVersion
	VCS -> Checkout from version control ->Subversoin
	VCS -> Browse VCS Repository->Browse Subversion Repository ,可以右击->打tag

	SVN代码本地修改了,没有提示修改了哪个目录中的文件,
	File->Settings->Version Control->右侧 复选 show directories with change descendants  ,但如果新增加一个文件就不行了？？？？？？
	version control视图->local changes 标签->Unversioned File 点brose -> expand all ->选择文件右击->add VCS	
											Default中是所有本地修改的文件列表
											
	右击目录->subversion->compare with branch ... 就可以像eclipse一样，边比较边修改, 如点配置，如SVN路径有中文不能点开树??? 只能手输带%的地址 (eclipse也是%形式)
	右击文件->subversion->compare with last repository version

	合并SVN  右击项目 -> subversion->Integerate directory ....  ,有时又不支持中文SVN路径？？？
	SVN分支  右击项目 -> subversion->Branch or Tag  ....  不支持中文SVN路径？？？
---Git
	右击文件->Git->Repository->Pull...
	
	右击根目录->Git->Repository->merge change ->选择 remote/origin/对应的分支 , 再刷新项目  右击根目录->sychronize xx 
	
	当有冲突时 	右击根目录->Git->Resolve Confilcts...->
	
	File->Settings->Version Control ->可以配置Git 的 root目录 (VCS Root如没有配置，右击文件就没有Git菜单，启动时会提示的)
	.git/config 文件中有保存git项目地址
	
	
	github上的Usr->Settings->Developer Settings菜单 -> Personal access tokens-> 菜单 ->generate  new token 按钮-> resend verify email 后->generate  new token 按钮进入界面->
	输入名字，选择权限(全部)后，生成token
	
	右击文件中的行号 -> Annotate -> 可以显示 这个文件的 Git 修改历史,
	
---
像word 同时只能打开一个项目
File->project stucture ->选择Modules标签 可以Import或者Add 多个,默认目录是在本项目的子目录 (有 Search for projects recursively)，可以修改为同级,多个web项目可独立运行
或者File ->new ->new Module...

如是eclipse的web项目，在Project Strure对话框中，选中模块 —> 点 + 按钮 -> 选择 Web -> 设置web.xml位置，设置WebContent目录位置 
	->Create Artifact 按钮后跳到Artifact标签，可以设置生成的项目目录,就可以在tomcat中选Artifact...项目
选中模块 —>Dependences->点 + 按钮 -> Library...-> 增加tomcat包依赖

导出war包 
在Project Strure对话框中 -> Artifacts标签->点+ -> 选择Web Applicant:Archive -> for xxx explod->Name中的xxx就是输出war名,设置输出位置
build菜单->build Artifacts...->选择 xxx ->Build

右击.iml文件-> subversion->ignore->*.iml
File->Settings->Editor->File Types  在ignore files and folders 中加*.iml;dubboregistry

收费版 File->Settings->Build,Executeion,Deployment->Application Server-> + 一个Tomcat,就可以Run中建立,
		deployment标签中+ 个我Artifact..->选择xx:war exploded
		server标签可以在on upate action 下拉选择 update resource或者update classes, 也可在运行时的Debug视图点刷新图标也会提示
				   on frame deactivation下拉选择 do nothing 这个是idea窗口切换其它窗口再回来时就做
						
		(对应于project structure...->Artifact  + 一个 Web Application Exploed -> From modules->),设置context,启动时注意左侧的连接图标
		注意不要修改tomcat中的catalina.bat 如设置内存,
		集成Tomcat和eclipse不一样的是,如果程序中(一个进程)开了新的线程Intellij并不是多个线程同时运行,通过调试可以看出,
		集成maven Jetty 也是一样的,说明是intellij 的问题,可以找到源代码
		
		tomcat配置在 ${user.home}/.IntelliJIdea<version>/system/tomcat 
				目录下 Unnamed_<project>\conf\Catalina\localhost\<project>.xml 有配置就是target目录<project>-<version>目录就是项目目录
 
	
Community版本 不能集成Tomcat,不太好用,
或者 file->settings->plugins->browser repositories ...-> 搜索jetty有一个 IDEA Jetty Runner,重启IDEA 后就可以Run中建立jetty runner,设置webapp,classes 目录,但还是只找WEB-INF/classes目录
		
		也有Smart Tomcat但不能用
		
或者(不用IDE 插件) 在pom.xml的<build>中加入
<plugin>
  <groupId>org.eclipse.jetty</groupId>
  <artifactId>jetty-maven-plugin</artifactId>
  <version>9.4.6.v20170531</version>
   <configuration>
	  <scanIntervalSeconds>10</scanIntervalSeconds>
	  <webApp>
		<contextPath>/test</contextPath>
	  </webApp>
	</configuration>
</plugin>

mvn jetty:run   

设置工作区字符集
File->Settings->Editor->File Encodings
Project Encoding: UTF-8

Navigator-> implments (ctrl+T ,开源版ctrl+alt+B) 打开实现类, 也可ctrl+alt+点击
右击方法-> Find Usages 
如ctrl+点方法 默认是usage 也可点旁边的小设置按钮,修改为implmenting mehtod

 右击 代码方法调用处 ->refractor-> introduce varaible...  补全方法返回值

 
 
View->tool windows->Run 显示控制台
View->tool windows->project 显示项目视图


设置菜单字体大小   File->Setting...->Appearance & Behavior-> Appearance -> 选中use custom font： 后面size:设置为12或14 (字体SimHei)

设置编辑器字体大小 ile->Setting...->Editor -> Color Scheme-> Color Scheme Font，选中Use color scheme font instead of default,设置Size: 14
设置控制台器字体大小  File->Setting...->Editor -> Color Scheme-> Console Font  16
Code -> reformat code 格式化代码 (ctrl+alt+L)
Edit->join lines (ctrl+shift+j) 把选中的代码压缩成一行
Code -> Generate...生成getter,setter  ( alter+insert  )
code -> completation -> basic   ( ctrl+ 空格  要修改 Setting->Keymap->Main menu中修改也可搜索 )代码提示 
code -> completation -> smart type   (   ctrl+shift+空格 代码提示  )
view -> parameter info      		 ( 放在方法()中按  ctrl+p 参数提示  )
view -> Tool Buttons
code -> optimize import (ctrl+alt+o) 
	如有import xx.*; 会去无用的import ,并不会自动替换,这点不如eclipse好用
标放在没有导入的类上, 按 alter + enter (同eclipse的ctrl+1) 提示import
code->folding->collapse all(ctrl+shift+-) 对JS太多很有用

自动批量导入
Settings->Editor>General>Auto Import-> Java组中 复选 add unambiguous imports on the fly选项 (ctrl+alt+o)

 
File->Settings->Key Map 可以选择与eclipse一样的快捷键

Edit -> find in path  ( ctrl+shift+f ) 按文件内容查,要点右则Recursivly按钮
 按两次 shift  按文件名查 
 
Edit->Find->Find...(ctrl+F)   Replace...(ctrl+R) 当前文件中
Edit->Find->seach structurally-> 按文件类型搜索内容

File->Settings->Editor->File Encodings  默认UTF-8  , 但建立的文件不是UTF-8的????
						选中Transparent native-to-ascii conversoin  就可以把properties文件内容转换中文显示
File->Settings->Editor->Code Style  设置 line separator 换行符为windows \r\n

View->Active Editor->use soft wrap 可以自动换行，只对当前文件有效
File > Settings > Editor > General -> use Soft Wraps in editor 对全部文件有效

没有MarketPlace ,插件安装有局限性,第一次启动有选择插件,File->settings->plugins -> 点 install JetBrains plugin...按钮
intellij 修改主题 
Settings->Appearance & Behavior->Appearance-> Theme 选择Darcula是黑色

View -> tools->Structure  显示大纲(就在左侧边栏)   
View -> Quick Documentation (ctrl+Q)   
Navigator->File Structure (  ctrl+F12 ) 显示弹出式的大纲
Navigator->bookmark -> show bookmark (  shift+F11 ) 显示书签窗口
navigator-> type hierachy (ctrl+h)，可以看打开类的所有子类，更改类要重新刷新
Navigator->class ... (  ctrl+N )


Settings->Editor->Live Templates ->other 里有psvm 生成main方法 

默认最多打开10个文件，超出就会自动关闭前面打开的
Perferences...  ->  Editor  ->General->  Editor Tabs 调整 Tab Closing Policy 的 Tab Limit 默认是10个 

打开文件的tab可多行显示
window -> editor tabs -> tabs replacement -> show tabs in single row
 
 光标在调用函数()中，View -> paramter info (ctrl+ p ) 提示方法参数
 

 File->invalidate cache/restart  可以把本地的版本历史记录清除,加快响应速度


 %HOMEPATH%\.IntelliJIdea2017\idea64.exe.vmoptions  默认不存在，内存不足时有提示会生成
	-Xmx750m
	-XX:MaxMetaspaceSize=200m
	-XX:ReservedCodeCacheSize=240m


自带.ftl插件
.properties 文件做国际化不能转换 settings->Editor->File Encodings 在面板的properties file 区设置编码UTF-8,选中transaprent natvie-to-ascii conversion 


列选择模式 选择多行光标会变高
右击-> column selection  mode (alt + shift + insert)

tools-> http client->test resetful web service 像firefox的reset client工具


Settings->Editor->Code Style->Java /JavaScript->Wapping and  Braces -> Braces Placesment 组中全部修改为 next line
	 "if() statement" 中 force brace 选中always 后，即使if后只一行代码也有{}

ctrl + y 是删除当前行

navigate->test (ctrl+shift+t)弹出窗口create new Test-> test library可以选择TestNG (依赖jar不是自带的,要么用maven,要么自己加手工建库)

File->Setings->Language & -Framework >JavaScript->webpack 可配置.js文件

DataBase标签(view->tool windows->database)->右击建立好的连接-> Database tools->manager show schema... （功能同DataGrip）

如一个包全部类都被使用,导入会变为*,如要取消 
Preferences->Editor > Code Style > Java > Scheme Default > Imports
  Class count to use import with "*" 改为 99 

Setting->Tools->Externel tools ->增加配置后（如压缩JS) 右击文件就会出现新建的菜单

转换大小写 Edit->toggle case ( ctrl+shift+u)


windows 下启动idea提示Cannot lock system folder(可能不是管理员导致), Unable to create Channel from class class  io.netty.channel.socket.oio.OioServerSocketChannel
管理员运行 netsh winsock reset

shell视图修改使用git bash(支持linux命令)
settings->tools->terminal -> shell path 中选择 Git安装目录/bin/bash.exe

ctrl+e 最近打开文件

导出jar包 project structure...->artifacts-> +按钮 ->jar -> from modules with dependences... ->选Main Class,会自己建立 MANIFEST.MF 文件
Build->Build artifacts...->默认输出在项目的out目录 


====================IntelliJ IDEA plugin 
https://plugins.jetbrains.com/
https://plugins.jetbrains.com/idea

---自带插件android
IDEA 2018.2.6 也可以建立Android 项目
(android SDK只可用JDK8),指定android SDK位置,有新建向导,不能和AndroidStudio同时使用同一个Android SDK
Gradle配置成 JDK 1.8 Settings->Buld,Execution,Deployment->Build Tools->Gradle在Gradle JVM中选择正确的JDK
IDEA 对已经有的Maven仓库会优先使用 Maven setting中配置的目录，再使用Gradle目录
AndroidStudio
	app项目下的build.gradle 中注意 compileSdkVersion/(minSdkVersion/targetSdkVersion)  和  Build Tools revision  和指定android SDK版本
	分析依赖 gradle视图->app项目->Tasks->android->androidDependences 右击->Run  在控制台显示树
IDEA 的Gradle视图 <项目> -> Task -> help -> dependencies 执行后控制台显示

Tools->Android->AVD Manager 
Tools->Android->SDK Manager
Tools->Android->Theme Editor
Tools->Android->Layout Inspect可以看到手机屏幕
有Logcat视图,Android profiler视图窗口

Manifest.xml文件 没有界面
minSdkVersion 25 (Build Tools 27.0.3,Android 7.1.1) 真机测试OK,模拟器api-28(android9.0)测试O
---自带插件kotlin

---IDEA 2018.2.6 插件scala 2018.2.6 
	建立项目时选择IDEA (选择SBT要下载的) 测试OK
---intellj plugin MyBatisX 
https://gitee.com/baomidou/mybatis-plus 国产的
https://plugins.jetbrains.com/plugin/10119-mybatisx
	可以Mapper接口类 点击图标 进入XML
	
---QAplugin findbug 替代老的findbugs
	右击项目  analyze 有图标-> analyze code  ,可以单选whole project
---SonarLint 有eclipse,idea,vscode版本
	右击项目-> SonarLint -> analyze with SonarLint
		SonarLint视图中显示 分析当前打开文件
		
		
---jd-gui

---JRebel 热部署插件（收费）
	IDEA 2018.2.6可以安装JRebel-2018.2.2 (idea官方jetbrains可以下载离线版)
	修改Mybatis的Mapping.xml也可立即生效 
	 
---lombok 插件 
	可自动生成代码，settings->Buile,Execution,Deployment->Compilier->Annotaion process->复选 enable annotaion process
	就可以在getter/setter类前加 @Data ,会在很多类前加@Log4j,代码中就可以直接使用log.info();
	pom.xml中加 打包时可以生成getter/setter
	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<version>1.16.20</version>
	</dependency>
	
---单独安装Vue.js 插件
https://plugins.jetbrains.com/plugin/9442-vue-js/versions
版本更新很快


---react Templates插件


---阿里的代码规范查检工具
settings->plugins-> 搜索 Alibaba Java Code Guidelines (有离线版)
tools->阿里编码规约->编码扫描 (如当前打开文件，只对这个文件，否则整个项目),
结果在inspect result视图中(view->tool windows->inspect result)


---idea_plugin_mongo
0.12.0 版本要求 idea-2016.1+ (没有SHA256不支持mongo-4.0)
0.12.2 版本要求 idea-2019.1+ 

离线下载mongo4idea.zip包，安装后有mongo explorer 视图

---idea-2017.3+_plugin_redis  Redis_Plugin-1.0.zip 
 安装后有redis explorer 视图
---idea-2018.3+_plugin_redis RedisNew-2020.5.20.zip 安装后要激活才行???
---idea-2020.1_plugin_Iedis2 Iedis_2-2020.1.1.zip 安装后要激活才行???




----hbase 插件 无???


---------intellij idea  插件 kubernetes 
在线验证yaml的好工具
https://onlineyamltools.com/prettify-yaml

idea 默认就支持yaml文件语法高亮，按tab缩进两个空格

intellij idea 2018.2 插件 kubernetes 
	在写键的时候有下拉提示,也可按ctrl+shift+space(Code->completion->Smart Type)来提示，会把不对键标红做提示
	没有提示的文档


---actiBPM 插件 
不是Activiti 官方提供的,eclipse 的是官方提供的

2014年的 3.E-8 版本 

安装后可以新建 BPMN 文件
画完图后 修改/复制 文件名为.xml文件,右击->Diagrams->show bpmn 2.0 desiner... 也会显示出图
	如有中文可能部分是乱码的,可以直接修改xml,###也可以修改 idea64.exe.vmoptions 文件尾行增加 -Dfile.encoding=UTF-8
点上方的export to file按钮,可选择图片格式，但如果idea主题是黑色，导出的图背景也是黑色

----Protobuf Support 插件 
 v0.13.0 (2019-03-13)  兼容idea版本2018.3+
 0.12.0    兼容idea版本 2018.2+

可语法高亮

----GenProtobuf 插件 
2020 年的1.4版本，兼容idea版本2017.3+
不能语法高亮

Tool->configure Gen Protobuf -> 选择语言Java,要 PATH环境变量中有protoc命令,也可设置输入目录,默认当目录
右击.proto文件-> quick gen protobuf here
-----JPA
view -> tool windows -> persistence 选中一个项目 右击->Generate persistence mapping -> by database schema 选择表可以生成带@Entity的类

-----idea 插件  Builder Generator
https://plugins.jetbrains.com/plugin/6585-builder-generator
Code -> Generate -> 多了一个builder


---Intellij Idea 插件 Rust 

https://plugins.jetbrains.com/plugin/8182-rust/
0.3.144.3766-211 			 2021.1   		Mar 29, 2021 
	又依赖于toml
	https://plugins.jetbrains.com/plugin/8195-toml

Settings->Rust-> Standard library 中设置rust主目录

可以运行(使用 cargo)，目前不能打断点

---------DataGrip 2018  可以不要 IntellijIDEA 也有这此功能,也有 WebStorm ,Android 功能

MySQL 8 jdbc
zeroDateTimeBehavior 要设置为CONVERT_TO_NULL
serverTimezone	 要设置为 UTC

右击连接 -> database tools ...->manage show schemas->current schema

---------CLion
2018.2.6 可以选择C++17 支持 Cygwin版本为2.8.0
2020.1  支持 Cygwin 3.1.4-1 版本 
2020.1.1 在openSUSE-leap-15.1 下支持 C++20,没有安装gdb也可调试,使用Bundled GDB 8.3 


windows 下可 Cygwin/MinGW/Visual Studio

下载的 Cygwin_x64 , 2018-11-22时cygcheck -c cygwin  显示为  2.11.2-1
	64位的 gcc-7.3.0-3 (mingw64-x86_64-gcc-core-6.4.0-2),gcc-g++ (mingw64-x86_64-gcc-g++)  , gcc-objc 可选
		gdb-8.0.1-1
		make-4.2.1-2
Settings->Build,Execution,Deployment->ToolChains->选择Cygwin 右则点...配置Cyginw home 可自动检测,测试OK

--------PhpStorm 
	Settings-> Language&Framewok ->PHP-> CLI Interpreter 选择php.exe
	Settings-> Language&Framewok ->PHP-> Debug 提示安装 XDebug 或 Zend Debugger
	
	---实现网页debug(最好服务器主目录指工作区)	
		--php.ini增加
		[Xdebug]
		zend_extension="D:/Program/php-7.4.3-Win32-vc15-x64/ext/php_xdebug-2.9.2-7.4-vc15-x86_64.dll"
		xdebug.remote_enable = on
		xdebug.remote_autostart = 1
		;host值是本机IP
		xdebug.remote_host = 192.168.1.102
		;对应phpStorm配置中xdebug的端口
		xdebug.remote_port = 9000
		
	Settings->Language&Framewok ->PHP->debug-> debug port的值对应php.ini中的 xdebug.remote_port的值 -> 点右上角的电话图标Listen for debug
	
	如php.ini中打开了xdebug.remote_autostart,可以不安装插件XDebug Helper
	如未打开，要安装firefox/chrome插件 XDebug Helper, 地址边上有灰色虫图标->Debug变绿，如不使用浏览器如PostMan 要传参数
	---
	如本地文件 和 远程服务器
	Settings->Language&Framewok ->PHP->PHP Server->对已有服务器配置 复选use path mapping,即配置本地路径前缀和服务端路径前缀
	Tools->Deployment->Configuration...-> + 可配置本地文件 如何传到服务器上,如FTP 或 SFTP
	Tools->Deployment->Automic upload 本地保存文件后自动上传 
	
	Run 菜单 -> Break at first line in PHP scripts

-------GoLand 2018.2.4 (IntellijIdea)
2020.1 版本 光标放在方法上有doc提示

Settings-> Go -> GoPATH 下有 global GOPATH (默认是~/go) 配置 
	
	右击 xx_test.go -> create TestXX (方法名) in xx.go(文件名) ,
	如运行报找不到方法, Settings-> Go -> GoPATH 下project GOPATH ,增加要把项目目录(代码要在src目录下)

右击文件Run->打开运行配置框，Run Kind 默认是package,可以选File，还有Directory

 
可以读到标准输入
可以同时调试两个文件
	
--------Pycharm
Settings->Project:<项目名> -> Project Intercepter -> 可选择python版本

---------Rider 跨平台的C#开发工具(也有开源的MonoDevelop )

---Intellij Idea 插件 Rust 

https://plugins.jetbrains.com/plugin/8182-rust/
0.3.144.3766-211 			 2021.1   		Mar 29, 2021 
	又依赖于toml
	https://plugins.jetbrains.com/plugin/8195-toml

Settings->Rust-> Standard library 中设置rust主目录
可以运行(使用 cargo)，Community版本 不能打断点

https://plugins.jetbrains.com/plugin/8182-rust/docs/rust-debugging.html  
中说只可Intellij Idea的 Ulimated版本, GoLand,CLion,PyCharm Pro才行

-----UpSource  免费的
用来做Code review

-----RestfulToolkit 免费的
ctrl+\  可搜索spring mvc 的地址

-----YouTrack 收费
Agile  PM

-----MyBatisPlus 代码生成code gen 依赖收费的datasource
 
========================teamCity CI/CD工具 
3个agent 是免费的

前端使用react开发

有docker版本
docker run -it --name teamcity-server-instance \
-v <path to data directory>:/data/teamcity_server/datadir \
-v <path to logs directory>:/opt/teamcity/logs \
-p <port on host>:8111 \
jetbrains/teamcity-server

安装在 C:\TeamCity 是一个Tomcat服务,有webapps/ROOT/
会生成 C:\TeamCity\buildAgent\conf\buildAgent.properties  文件 
有使用C:\TeamCity\buildAgent\system ,work,temp 目录, ownPort=9090 

安装后会建立 TeamCity Build Agent , TeamCity Server 服务
http://127.0.0.1:80 默认数据目录配置为 C:\ProgramData\JetBrains\TeamCity,选择数据库如MySQL

页面提示 C:\ProgramData\JetBrains\TeamCity\lib\jdbc 放 mysql-connector-java-8.0.15.jar
输入连接数据库信息

配置保存在 C:\ProgramData\JetBrains\TeamCity\config\database.properties

create user teamcity@'%' identified by 'teamcity';
create database teamcity; 
GRANT ALL   ON teamcity.* TO 'teamcity'@'%';
建立了140张表
如数据库丢失 点链接 http://127.0.0.1/mnt  会提示 C:\TeamCity/logs/teamcity-server.log 会有 Super User toke ，提示配置信息，Procced 建立数据库表
 
提示建立管理员帐户，如 admin/teamcity

登录为管理员，右上角有Aminstration链接，
Licenses 显示为professional ,最多3个agent,最多 100 build configurations
增加多个agent可以同时做相同的事，如3个项目同时做build
Agent->Install Build Agents 下载文件即
	C:\TeamCity\webapps\ROOT\update\ 下的 agentInstaller.exe , buildAgentFull.zip  程序包

 
https://github.com/callicoder/spring-boot-websocket-chat-demo  项目来测试

可以建立其它用户 

建立项目 如起名为 project1 ,在其下建立Build Configurations,如起名为 project1_config
project级配置 ->Settings标签
		 Version Control Settings标签:可Git
		 Build Step标签: 可为很多类型如 Maven->Advance Setting中有配置JDK,  可以上传setting.xml,起名为build级使用
		 Parameters 标签: 可以建立下拉框类型的参数，如服务是启动/停止/重启,env=dev
		 Connection标签:可以配置Docker Registry
		
可以建立多个build,其中每个可以临时disable

build级配置 的 Run边上的...按钮-> 可以选择Agent,也可建立多个Agent,Parameter标签就可以看刚建立的参数(可下拉框式) ->Run按钮开始执行

右上角的 project级 切换 Edit project Settings 		和 project home
		 build 级 切换 Edit Configuration Settings 	和 build configuration home

project级配置 
	Maven Settings文件可以上传，起名字为builder级使用,默认只使用镜像URL,不使用仓库位置(下载到C:\TeamCity\buildAgent\system\jetbrains.maven.runner\maven.repo.local)
	SSH Keys 可为 Git 使用 (teamcity使用jsch只支持 ssh-keygen -m PEM的 方式生成的 id_rsa文件)
build级配置  Git  可以用 private key 
	Authentication Method:
		可下拉选择 Upload Key，即在project级上传的
		可下拉选择Default Private Key ,提示路径为"C:\Windows\system32\config\systemprofile\.ssh\config"
			C:\Windows\system32\config 是已经存在的,后面的要单独建立
		可下拉选择为Custom Private Key ,可以使用project级或build级来配置Parameter (ssh-keygen -m PEM的 方式生成的 id_rsa文件)
	
build级配置
	build number format:默认值为  %build.counter%  可被其它地方使用
	build counter:
	
	Runner Type 还有其它的,如Gradle,Docker,Docker Compose,Container Deployer(tomcat输入用户名密码，上传war包)
		command line , 可以使用环境变量，如 echo %build.counter% >> c:/tmp/buildNum.log
	 	Maven,	show advanced options有更多选项
			Execute Step: if all previous step finished successfully
			working directory:是相对于C:\TeamCity\buildAgent\work的目录，也可使用是绝对路径 
			JDK:默认使用JAVA_HOME
			Jacoco Coverage:
			
			Maven Settings:默认使用M2_HOME
			Additional Maven command line paramter:可配置如-Dmaven.test.skip=true
			Path to POM file: 可以使用相对路径如./Server/pom.xml 
			User Settings:选择project级上传的settings.xml文件起的名,默认只使用镜像URL,不使用仓库位置(下载到C:\TeamCity\buildAgent\system\jetbrains.maven.runner\maven.repo.local)
				可修改Local Artifact Repository Settings默认的per agent为maven default
			
			
			
---
环境变量%system.teamcity.build.checkoutDir% 的值是C:\TeamCity\buildAgent\work\xxx ,代码下载目录，当前这个build级的目录，在第一次启动后生成，后面就一直用这个目录
	work下的文件夹如没有被teamcity使用，会被自动删除，文件不会
看有哪些环境变量可用，可在已经执行过的bulder中的parameter标签，如%teamcity.agent.work.dir%

拿不到其它的builder的目录 ,只能通过复制到一个公共可仿问的目录


定时构建
	build级配置->trigger->add new triger按钮->可选择schedule Trigger,
		VCS trigger 监测到代码变化时，可输入分支名，advance options->Quiet Period Settings 组下可以配置Quiet period mode 选custom，如30分钟一次
		
