
服务器telnet　配置如下：  
  service   telnet  
  {    
  disable　　　　   =   no  
  only_from   　　　=   219.140.78.{17,19}  
  access_times　　=   8:00-12:00   20:00-23:59  
  }  
  工作站ping   服务器　ok


==============vsFTP===============

ftp中mget下载，put上传

chkconfig vsftpd off --list
finger 用户名


make 后　生成vsftpd文件
cp vsftpd	/usr/local/sbin
cp vsftpd.conf /etc/
cp xinetd.d/vsftpd  ...

cp  RedHat/vsftpd.pam    /etc/pam.d/ftp   复制认证文件
后service vsftpd start 后在文件保存在　/var/ftp/下的文件夹中

vi /etc/vsftpd/vsftpd.conf  配置文件　

listen_port=2121改变默认端口21为 2121
anonymous_enable=YES 改为NO取消匿名登录,要用系统的ftp用户,有主目录
local_enable=YES

chroot_local_user=YES	#将本地用户锁定在主目录中，不允许切换到上一级目录中


FTP虚拟用户 --linux才有
db_load(db4-utils) -T -t hash -f /etc/vsftpd/ftp_users.txt( 第一行用户，第二行密码) vsftpd_login.db

编辑 /etc/pam.d/vsftpd 
auth	required	/lib/secrity/pam_userdb.so db=/etc/vsftpd_login
vi /etc/vsftpd/vsftpd.conf  中加入 guest_enable=YES	guest_username=ftp(虚拟用户充当的用户)

find -perm 002  其它可写的文件
权限s
find -perm +6000 | more
smtps 
https
sftp
ssh



配置 listen=YES 可独立启动
/usr/local/sbin/vsftpd & 启动,会读/etc/vsftpd.conf

local_enable=YES 要用目录/usr/share/empty

==========Squid ,浏览器设置代理
代理服务器和Web缓存服务器
CDN(Content Delivery Network) 缓存  Edge Side Includes (ESI)

squid-3.5.22.tar.gz

./configure --prefix=/usr/local/squid
make all    ## 不能运行,如yum install squid后又可以了,知道依赖什么
make install

/usr/local/squid/etc/squid.conf		配置
	http_port 3128
	
/usr/local/squid/sbin/squid -z		安装
/usr/local/squid/sbin/squid			启动 报错???

----yum install squid
vi /etc/squid/squid.conf
service squid start  如 CentOS 跳到 /bin/systemctl start  squid.service
squid -k reconfig 重新加载配置
--- squid.conf 配置
http_port 3128
access_log /var/log/squid/access.log
cache_dir  /var/spool/squid/
visible_hostname  10.0.0.1

acl localnet src 10.0.0.0/8    		#localnet自己起的名字
acl all src 0.0.0.0/0.0.0.0 

http_access deny  localnet
http_access allow all

浏览器设置代理  10.0.0.1  3128



===============================CVS
光盘中的rpm可以直接安装 (最好关闭seLinux)
安装xinetd软件包(rel5盘中有的)可以直接安装

./configure --prefix=/opt/cvs --with-cvs-admin-group=cvs

groupadd cvs 
useradd -g cvs -G cvs -d /home/cvsroot cvsroot 
passwd cvsroot 
chmod 775 /home/cvsroot 

export CVSROOT /home/cvsroot
cvs -d /home/cvsroot init    
生成目录/home/cvsroot/CVSROOT,其下为一些初始化文件

cvs import -m "comment" project_name vendor_tag release_tag 
##会将当目录下的所有文件,加入到目录/var/cvs/project_name中,/var/cvs/目录必须cvsroot用户可以写
				

vi /etc/xinet.d/cvs 修改disable=no 或者加enable=yes   (cvsserver)
suse-11 rpm 包 xinet.d/cvs 的内容
service cvspserver
{
        disable         = yes
	socket_type     = stream
	protocol        = tcp
	wait            = no
	user            = root  
	server          = /usr/bin/cvs
	server_args     = -f --allow-root=/home/cvsroot pserver
}
redhatEL5 cvs-1.11.22-5.el5.rpm 包 xinet.d/cvs 的内容
service cvspserver
{
        disable                 = no
        port                    = 2401
        socket_type             = stream
        protocol                = tcp
        wait                    = no
        user                    = root
        passenv                 = PATH
        server                  = /usr/bin/cvs
        env                     = HOME=/var/cvs
        server_args             = -f --allow-root=/var/cvs pserver
#       bind                    = 127.0.0.1
}
server_args的值可有多个--allow-root= 即多个仓库,每个仓库可有很多项目

cat /etc/service | grep cvs 应该有cvspserver 2401 ,  cvs的2401端口
netstat -l | grep cvsserver

cvs -d :pserver:zh@localhost:/var/cvs login    
###-d覆盖CVSROOT环境变量,/var/cvs是配置文件中的
工具生成的CVSROOT是  :pserver;username=zh;password=123;hostname=192.168.1.29:/var/cvs

export CVSROOT=:pserver:zh@localhost:/var/cvs
cvs login
cvs import -m "comment" project_name vendor_tag release_tag  
##会将当目录下的所有文件,加入到目录/var/cvs/project_name中,/var/cvs/目录必须cvsroot用户可以写

cvs  checkout project_name
cvs  add -m "no message"  file1.txt
cvs  commit -m "no message"  file1.txt
cvs  update  file1.txt  不会把自己改的冲了




CVSROOT目录内读取三个文件,passwd、readers和writers ,要手工建立 
readers只读用户和writers读写用户,每个用户名占一行
passwd文件格式为： username:password:cvsroot 中间的密码是加密的密码 使用apache的一个工具 htpasswd ./passwd zh(第一次使用时要加-c参数)
cvsroot是操作系统用户


CVS 是依赖于xinetd的,可以使用cvsd

---cvsd---
CVSROOT/config添加下面行(也可不加)
	SystemAuth=no
	PamAuth=no
	LockDir=/tmp/cvsroot  ####的/tmp/myrepos是指相对于RootJail的路,要mkdir 

cvsd-passwd 命令
	[+]USER[:SUSER]
		      Add or update the user to the CVSROOT/passwd file. 
	-USER  Remove the user from the CVSROOT/passwd file.
	如cvsd-passwd /var/cvsd/test +anoncvs

/etc/cvsd/cvsd.conf配置文件
	Uid cvsd	###对应cvsd-passwd生成的口令文件的第三列
	RootJail /var/cvsd　
	Listen * 2401
	Log /var/log/cvsd.log debug
	Repos <path> #The value is passed as a  --allow-root=<path>
	Repos /test  ##/var/cvs/test仓库init后的有CVSROOT　，此处的路径也是相对于RootJail的

	删　Limit coredumpsize 0出错时不生成coredump 

cvsd-buildroot (RootJail的值)
cvsd-buildroot  /var/cvs 会在目录生成bin,lib,tmp,usr等目录,有bin/cvs命令,也就是说项目名不能为tmp,usr

export CVSROOT=:pserver:zh@localhost:/test

改过配置要重启的

OK

---cvsd---

CVS日志在/var/log/message中有的


winCVS的使用
remote->checkout module (下载)要与服务上的模型名同
remote ->import module (上传)

eclipse右击项目->share project->cvs->  (要手工建文件夹在/var/cvs/project01,如有包也要创建    注意权限和用户主)

linux 图形gcvs
gzip -cd gtk+-2.16.4.tar.gz | tar xvf -  也可以解压文件的 ,c是输出stdout
unxz -cd MPlayer-1.1.tar.xz | tar -xvf -
bzcat SunStudio12u1-OS-platform-pkgs-ML.tar.bz2 | tar -xf -

===============上 CVS=====================

===============SVN subversion=====================
TortoiseSVN 清记忆密码，可以右键出SVN菜单
Settings->Saved Data->Authentication data,Clear 

svn://协议 客户端 使用silkSVN可以用,但使用Visual SVN就不行


运行 svnserve -d (daemon)
lsof -i :3690 可以看服务已经运行   (cat /etc/service | grep svn)
list open files ,-i internet
 

客户端执行  
执行 #svn checkout svn://svn_server_ip/home/mysvn
或者 #svn checkout svn+ssh://svn_server_ip/home/mysvn
eclipse的SVN只对网址URL的方式



依赖于libtool ,autconf,opnessl(opensslv.h  openssl-devel.rpm) ,db(rpm 包不行的，用源码安装)
	awk(windows INSATLL中看的)

----db 源码安装 
cd build_unix 
../dist/configure
make
make install
安装在/usr/local/BerkeleyDB.4.7   

./configure  --prefix=/usr/local/subersion --with-apxs=/usr/local/apache2_svn/bin/apxs --with-openssl=/usr/local/openssl  --with-berkeley-db=/usr/local/BerkeleyDB.4.7/
subversion 中加　--with-berkeley-db=/usr/local/BerkeleyDB.4.7
-----

apache 中

  $ ./buildconf
  $ ./configure --enable-dav --enable-so --enable-maintainer-mode
  $ rm /usr/local/lib/libsvn*
  $ make clean && make && make install


subversion 中
最后解压subversion-deps-1.5.4.tar.gz

  $ sh ./autogen.sh
  $ ./configure　--with-apxs=/usr/local/apache2/bin/apxs　####--prefix=/usr/local/subversion 
  $ make
  # make install

安装后/usr/local/apache2/modules 下多了两个文件mod_authz_svn.so和mod_dav_svn.so
也自动改了httpd.conf文件中加了　
LoadModule dav_svn_module   modules/mod_dav_svn.so
LoadModule authz_svn_module modules/mod_authz_svn.so


建立仓库svnadmin create /home/mysvn  目录下生成一些文件

在/usr/local/apache2/conf/httpd.conf中加入:
<Location /svn/repository>
DAV svn
SVNPath /home/mysvn
</Location>



cat /etc/services | grep svn


在服务器的浏览器中输入网址:
http://localhost/svn/repository/


svnadmin create /home/svnroot/repository/test

这条语句将把路径/home/user/import下找到的文件导入到你创建的Subversion 仓库中去，
//提交后的修订版为1。
# ./svn import /home/user/import file:///home/svnroot/repository/test –m "注释"
# ./svn import /home/user/import/xx.java file:///home/svnroot/repository/test/xx.java –m "注释"

httpd.conf 中添加
   LoadModule dav_svn_module modules/mod_dav_svn.so
   LoadModule authz_svn_module modules/mod_authz_svn.so
   <Location /svn>
   DAV svn
   SVNParentPath /home/svnroot/repository/ //svn父目录
   AuthzSVNAccessFile /home/svnroot/repository/authz.conf //权限配置文件
   AuthType Basic //连接类型设置
   AuthName "Subversion.zoneyump" //连接框提示
   AuthUserFile /home/svnroot/repository/authfile //用户配置文件
   Require valid-user //采用何种认证
   </Location>
   //其中authfile是通过"htpasswd [–c] /home/svnroot/repository/authfile username password"来创建的
   //"Require valid-user"告诉apache在authfile中所有的用户都可以访问。如果没有它，
   //则只能第一个用户可以访问新建库 



http://localhost/svn/test/，

htpasswd [-c] /home/svnroot/repository/authfile wooin   加用户

修改svn配置
vi /home/svn/yourprojectname/conf/svnserve.conf
anon-access = read
auth-access = write

2)权限分配

# vi /home/svnroot/repository/authz.conf
   [test:/] //这表示，仓库test的根目录下的访问权限
   wooin = rw //test仓库wooin用户具有读和写权限
   bao = r //test仓库bao用户具有读权限
   [test2:/] //test2仓库根目录下的访问权限
   wooin = r //wooin用户在test2仓库根目录下只有读权限
   bao = //bao用户在 test2仓库根目录下无任何权限
   [/] //这个表示在所有仓库的根目录下
   * = r //这个表示对所有的用户都具有读权限
   #[groups] //这个表示群组设置
   #svn1-developers = wooin, bao //这个表示某群组里的成员
   #svn2-developers = wooin
   #[svn1:/]
   #@svn1-developers = rw //如果在前面加上@符号，则表示这是个群组权限设置

$ svnserve -d --foreground -r /home/svn 
SVN 就开始监听默认的端口(3690)

http.conf文件
   User daemon # 将daemon改为svnroot，让apache进程以svnroot的身份运行 


 svnlook tree /var/repos/testProject/ 
 
 svn://host.example.com/usr/local/repositories/project1
 或者用
 $ svnserve -d -r /usr/local/repositories 后就可以用
 $ svn checkout svn://host.example.com/project1　--username lisi  --password
 	或者用这样的形式　svn co svn://lisi@localhost:3690/testProject



-T　用线程代代替进程


conf 目录下的svnserve.conf 中anon-access =none  ( 原来是read不行的)

~/.subversion/auth/　目录缓存,
SSH密码缓存工具，像类Unix系统的ssh-agent或者是Windows下的pageant。 

关闭凭证缓存 使用参数--no-auth-cache：
svn commit -F log_msg.txt --no-auth-cache



??????????????????????

svnserve是以管道模式调用的（-t）  才用svn+ssh://


或者在svnserve.conf中加入
[auth]
store-auth-creds = no

[tunnels]
rsh = rsh
来使用svn+rsh://host/path

--with-openssl=/usr/local/openssl   (可以手工源码安装openssl)
./configure  --prefix=/usr/local/subersion --with-apxs=/usr/local/apache2_svn/bin/apxs --with-openssl=/usr/local/openssl  --with-berkeley-db=/usr/local/BerkeleyDB.4.7

apr-util 中也要加--with-openssl  ,要单独make && make install(失败)(deps包中的)

---------多端口的监听
Listen 5001
Listen 8080

#222.73.218.46
NameVirtualHost *:5001
<VirtualHost *:5001>
# DocumentRoot /apache2/htdocs  ##SVN不能使用DocumentRoot
</VirtualHost>

NameVirtualHost *:8080
<VirtualHost *:8080>
# DocumentRoot /apache2/apply
</VirtualHost>


SVN  如何禁止commit

==============上 SVN===================== 
===================sendMail =============
小心iptables,selinux

不要安装sendmail,或postfix
如果不能启动sendmail ,在/etc/hosts文件中本机对的域名尾加点(.),(日志和hosts 文件有关)

mailq查看队列


sendmail.cf文件中
# SMTP daemon options
　　O DaemonPortOptions=Port=smtp，Addr=127.0.0.1， Name=MTA

 
里的Addr可改为本机IP，　这样netstat -an | grep 25 显示的本机ＩＰ,就不是127.0.0.1

#O Timeout.ident=5s　　　　5秒后发出一个超时信号

rpm -e --nodeps sendmail  不要依赖检查

/etc/mail/trusted-users文件

要安装 cyrus-sasl-plain,cyrus-sasl,cyrus-sasl-devel
	cyrus-sasl#./configure --prefix=/usr/local/sasl2 --enable-login   
	一定要加--enable-login，因为SASL2默认不支持login这种验证方式，而OUTLOOK是通过login来进行SMTP验证的。 
# cd /usr/lib
# ln -s /usr/local/sasl2/lib/* .
# mkdir  -p /var/state/saslauthd   ##这个要的
/usr/lib/sasl2目录中，也就是/usr/local/sasl2/lib/sasl2这个目录  Sendmail.conf（注意是大写的S）

# echo 'pwcheck_method: saslauthd' > /usr/lib/sasl2/Sendmail.conf (S大写)
#/usr/local/sasl2/sbin/saslauthd -a shadow 
#/usr/local/sasl2/sbin/testsaslauthd -u zh -p 123

#useradd smmsp -d /var/spool/mqueue  -s /dev/null  
#mkdir /etc/mail 

sendmail.mc记得要使以下两个条语句有效，它的意思是如果access.db访问控制没有设置，则启用以下验证方式进行smtp验证。
TRUST_AUTH_MECH(`EXTERNAL DIGEST-MD5 CRAM-MD5 LOGIN PLAIN')dnl
define(`confAUTH_MECHANISMS', `EXTERNAL GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN PLAIN')dnl

　5．编辑sendmail.mc，加入你需要的FEATURE.
　　TRUST_AUTH_MECH(`LOGIN PLAIN DIGEST-MD5')dnl
　　define(`confAUTH_MECHANISMS', `LOGIN PLAIN DIGEST-MD5')dnl
　　*dnl define(`confDEF_AUTH_INFO', `/etc/mail/auth/auth-info')
　　FEATURE(`no_default_msa')dnl
　　DAEMON_OPTIONS(`Port=25, Name=MSA, M=Ea')dnl
　　注意：FEATURE要加在MAILER语句的前面。
　说明：
　　"TRUST_AUTH_MECH"的作用是使sendmail不管access文件中如何设置，都能relay那些通过LOGIN，
　　PLAIN或DIGEST-MD5方式验证的邮件。
　　"confAUTH_MECHANISMS"的作用是确定系统的认证方式。
　　"confDEF_AUTH_INFO"的作用是当你的计算机作为客户机时，
　　向另外一台有smtp认证功能的主机进行认证，用户和密码存放在auth-info文件中，在这个例子中并不需要这个功能，所以注释掉了


在源码目录树的saslauthd子目录中运行 # make testsaslauthd命令生成

pop3(密码,认证)接收时要把用户名写成　全名（user@company.com）


root@192.168.1.30's password:
telnet localhost 25  入命令 localhost 显示250-AUTH DIGEST-MD5 LOGIN PLAIN


host -t MX chinaitlab.com


---所依赖的
Berkeley DB的安装（oracle公司的）

到 build_unix文件夹,, 执行
../dist/configure  ##--prefix=/usr/local/bdb/
make
make install

# ln -s /usr/local/bdb/lib/* /usr/lib/
-----

解压后，新建devtools/Site/site.config.m4文件,中增加 

APPENDDEF(`confENVDEF',`-DSASL=2')
APPENDDEF(`conf_sendmail_LIBS',`-lsasl2')
APPENDDEF(`confINCDIRS', `-I/usr/local/sasl2/include') ##如sasl2指定了--prefix ,ln -s /usr/local/sasl2/lib/* /usr/lib/

注意要安装db-4.6.21.tar.gz(Berkeley DB 前缀可是bdb)



APPENDDEF(`confMAPDEF',`-DNEWDB')
APPENDDEF(`confLIBS',`-ldb')
APPENDDEF(`confINCDIRS', `-I/usr/local/BerkeleyDB.4.6/include')##多加这一个 ,db的安装目录 (### vi BuildTools/Site/site.config.m4) 
APPENDDEF(`confLIBDIRS',`-L/usr/local/BerkeleyDB.4.6/lib')##多加这一个



sh Build -c
###sh Build install (后/etc/mail 下有文件生成)

## mkdir /usr/man/man8 /usr/man/man1 /usr/man/man5
会有类似的  cc -O2 -I. -I../../include   -DNEWDB(##) -DSASL=2（####）      -c -o deliver.o deliver.c
 复制 cf目录的所有内容
mkdir /usr/share/sendmail
cp -r cf  /usr/share/sendamail
cp -a
复制 cf/cf/generic-linux.mc cf/cf/sendmail.mc
要安装 m4宏 （dnl表示注释）  空格不可有


cd cf/cf
cp generic-linux.mc sendmail.mc
mkdir /etc/mail
make install-cf  [cf/cf] (用 m4 在/etc/mail/下生成sendmail.cf文件)
cp sendmail.mc /etc/mail/ (就可以每次改/etc/mail/下的sendmail.mc文件,就不用进源码目录了)

cd /etc/mail
touch aliases access   ####sendmail.mc 文件中  define(`ALIAS_FILE',`/etc/aliases')
echo "chinaitlib.com">/etc/mail/local-host-names   sendmail是为哪个域服务的（判断一封信是不是自己域）
echo "mail.chinaitlib.com">>/etc/mail/local-host-names  (也为mail这个主机)
###sh Build install   
makemap hash access<access      # accesss.db db 可省,编译时要-DNEWDB  充许谁发信
makemap hash aliases<aliases   #/etc/aliases(生成.db文件)

mkdir /var/spool/mqueue   邮件并不一马上发出去
/usr/sbin/sendmail -db(守护运行) -q1h(队列1小时处理一次，可m,s)
man sendmail

netstat -tnl | grep :25   #### SMTP 服务器  看日志文件/var/log/maillog



useradd redhat(root不能发信，收信，不能用IMAP,pop3远程连接)
echo "root: redhat" >>/etc/mail/aliases 表示把有的发给root的信转给redhat账户 
newaliases #更新 db文件
测试在同一域中的
Telnet 192.168.1.104 25
mail from: root@xx.com
rcpt to: zh@xx.com
data
输入内容以 .结束
.
quit

测试时也可以用sendmail userId@sina.com的方式来测试发信,(成功的)

日志在/var/log/maillog

mail:来收信

 imap软件包
 chkconfig ipop3 on  
 chkconfig imap on
service xinetd restart




compress 软件包来解压  .Z文件   用compress   (-d 解)

vi /etc/mail/sendmail.mc
加入
include(`/usr/share/sendmail/cf/m4/cf.m4')dnl   ##是先前复制的
FEATURE(`access_db')dnl
加入用户验证
echo " define(`confAUTH_OPTIONS',`A y')dnl " >> /etc/mail/sendmail.mc
echo " TRUST_AUTH_MECH(`LOGIN PLAIN')dnl " >> /etc/mail/sendmail.mc             #### LOGIN PLAIN
echo " define(`confAUTH_MECHANISMS',`LOGIN PLAIN')dnl " >> /etc/mail/sendmail.mc     

---
define(`confCONNECTION_RATE_THROTTLE',`3')  限每秒连接次数    throttle扼杀
define(`confMAX_DAEMON_CHILDREN',`20') 最大20个子进程,同时连接数目

FEATURE(`accept_unresolable_domains')   不推荐
MASQUERADE_AS(`localhost.localdomain')  伪装


LOCAL_DOMAIN(`localhost.localdomain')  与local-host-names  文件区别
define(`SMART_HOST',`localhost.localdomain')

DAEMON_OPTIONS(`Port=smtp,Addr=127.0.0.1,Name=MTA') 改Addr

imitest -m login -a userid -p port  host  测试IMAP
/var/spool/imap/t/user
su cyrus
cyradm
	authenticate login auth
	chdir cd
	createmailbox	create	cm
	deleteaclmailbox  deleteacl   dam
	deletemailbox     delete      am
	disconnect      dis
	exit		quit
	info
	help 	?
	listadd   lam  listaddmailbox
	listmailbox	lm
	listquota lq
	listquotaroot lqr lqm
	mboxcfg		mboxconfig
	reconstruct
	renamemailbox	rename	renm
	server	servername connect
	setaclmailbox	sam	setacl
	setinfo
	setquota sq
	subscribe sub 订阅
	unsubscribe unsub
	xfermailbox xfer   将信箱传其它服务器上
创建用户后(test)
cm user.test 后在/var/spool/imap/t/user下有用户




sam share test(用户) lrwsip
	l  list 
	r   read
	w   write
	i   insert	
	p   可以发送邮件给文件夹	  
	c  create
	d  delete
	a  admin
	s  seen



/etc/sysconfig/iptables/
thunderbird mail客户端工具
Qpopper  pop服务
squirrelmail 的conf.pl 交互配置文件(./configure)
		conf_local.php会覆盖config.php



MTA 不区分用户名大小写(邮箱用户名)

/etc/host.allow有sendmail :ALL
		 pops:ALL
		imap:ALL

<Directory ~ "正则表达式">
	AllowOverride NONE 禁用.htaccess文件
</Directory>
Qpopper 是一个pop服务
---
m4 sendmail.mc -> sendmeail.cf (/etc/mail)

echo "10.0.0	RELAY">>access  ##来自10.0.0 段的IP可以RELAY
makemap hash access<accesss



重启
要测试DNS  host -t MX redhat.org.cn   ,,host -t MX chinaitlib.com

加用户验证(sasl)
>access 建一个空的access文件
makeamp hash <accesss

在sendmail.mc文件中增加
include(`/usr/share/sendmail/cf/m4/cf.m4')dnl   ##前有过 是先前复制的
define(`confAUTH_OPTIONS',`A y')dnl   必须用户验证才可以出去
TRUSTAUTH_MECH(`LOGIN PLAIN')dnl      
define(`confAUTH_MECHANISMS',`LOGIN PLAIN')dnl

返译
m4 sendmail.mc > sendmail.cf

chkconfig saslauthd on   (通过sasl来验证)
service saslauthd restart　　　启动sasl


echo "pwcheck_method:saslauthd">/usr/lib/sasl2/Sendmail.conf
重启 sendmail -db -q1h

telnet localhost 25  (可以是pop3,imap,smtp对启动的)
ehlo localhost  如果看到  AUTH LOGIN　PLAIN说明成功　，在outlook中账户里打开我的服务器要求验证
>mail from: root@example.com
>rcpt to: redhat@example.com
data
输入内容以.结尾
.
quit

su - redhat 到自己的目录


在aliases中加入
一般是500以下的uid
postmaster：root   邮件服务器出现问题　　newaliases
安全要 chkconfig imaps on
outlook中要　　选中些服务器要求安全连接(SSL)

如果本地用户:~/.forward文件配置一些用户(单列,和 aliases做用同,只对本用户可以编辑) 

access文件
  　Ok--远程主机可以向你的邮件服务器发送邮件；
　　RELAY--允许中转；
　　REJECT--不能向你的邮件服务器发邮件和不能中转；
　　DISCARD--发来的邮件将被丢弃，同时并不向发送者返回错误信息。
　　nnn text-- 发来的邮件将被丢弃，但sendmail将会向发送者返回nnn确定的smtp代码和text变量确定的文本描述。 

默认组smmsp
/etc/mail/submit.cf


sendmail.mc文件
	FEATURE(access_db). 该参数指定利用哈希数据库/etc/mail/access来决定是否允许某个主机通过本地进行邮件转发。

　　	FEATURE(blacklist_recipients).若该参数被设置，则在决定是否允许某个主机转发邮件时同时察看邮件发送着地址和邮件接受者地址。 
	FEATURE(accept_unresolvable_domains).通常来讲，sendmail拒绝接受发送者邮件地址指定的主机通过DNS不能解析的邮件，而该参数允许接收这种邮件。 
	FEATURE(relay_based_on_MX).该参数允许转发邮件接受者地址的MX记录指向本地的的邮件，例如，本地接收到一个发送目的地址为user@b.com的邮件，而b.com域名的MX记录指向了本地机器，则本地机器就允许转发该邮件。



关于cyrus-imapd 
define(`confLOCAL_MAILER',`cyrus2')
define(`CYRUSV2_MAILER_ARGS',`FILE /var/lib/imap/socket/lmtp')
MAILER(cyrusv2)


-----------------------------------安装oracle 11g
ORACLE 11g SUSE-10 redhat-4 ,redhat-4

net.core.rmem_max =4194304
net.core.rmem_default=  4194304
net.core.wmem_max =262144
net.core.wmem_default = 262144
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 1024 65000



root 运行 /opt/oracle/oraInventory/orainstRoot.sh
	/opt/oracle/product/root.sh
https://zhHost.com:1158/em  是enterprise manager


不用安装java  ,用自带java 命令

sqlplus 下不能ctrl+z

oracle 用户 不能dbshut   ???????
ORACLE_HOME_LISTNER is not SET, unable to auto-stop Oracle Net Listener
Usage: /opt/oracle/product/bin/dbshut ORACLE_HOME
 
---------SUSE-10  安装oracle 11g response-------OK------------------

net.core.rmem_max =4194304
net.core.rmem_default=  4194304
net.core.wmem_max =262144
net.core.wmem_default =        262144
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 1024 65000


有/opt/oracle/oradata 

把install/response/ee.rsp文件中<V 的所有都设置好

只安装软件,不安装数据库，有dbca的

/etc/oraInst.loc中记录内容是
inventory_loc=/opt/oracle/oraInventory  ###目录最好不存在,也可以为空，/opt/oracle/product 也要为空
inst_group=oinstall

./runInstaller -silent  -responseFile /home/oracle/database-11g/install/response/ee.rsp

###responseFile 一定要用绝对路径,(不要用-responseFile=/xxx)否则会报resp文件找不到参数
	DEP_MODE(InstallType),
	TLDepModes(TopLevelInstallType)

也会打印出检查结果，但有错误他不会停止，要自己看，可以root用户su oracle 来安装

.........等待
提示root 用户运行脚本：
	/opt/oracle/product/root.sh
	###还有一个呢？？？？	


还要复制init.ora 到initSID.ora文件，
改db_name=SID
改control_files=('','')
才能启动
按提示改share pool大小
没有建立控件文件
ORA-00205: error in identifying control file, check alert log for more info
卸载ORACLE时，/etc/oratab文件记录SID

10g response安装－－－－－－－－－－－－－
$./runInstaller -record -destinationFile /tmp/install_database.rsp
10g会生这个文件，11g 不会生成的
SUSE-10 可以安装oracle 10g ,但是如果用了rsp 文件检查平台时失败(要SUSE－9)

------------------ 


==========================CentOS-5.2安装Oracle11g=========================

cat >> /etc/pam.d/login <<EOF 
session required /lib/security/pam_limits.so
session required pam_limits.so
EOF

进程数量和打开文件的数量设置限制
cat >> /etc/security/limits.conf <<EOF 
oracle soft nproc 2047
oracle hard nproc 16384
oracle soft nofile 1024
oracle hard nofile 65536
EOF

编辑 /etc/security/limits.conf 行末添加以下内容

#use for oracle
* soft nproc 2047
* hard nproc 16384
* soft nofile 1024
* hard nofile 65536

编辑 /etc/pam.d/login 行末添加以下内容
　     session required pam_limits.so

编辑 /etc/selinux/config 确保以下内容

　　SELINUX=disabled

　　关闭SELIINUX

 因为默认centos5.1不支持10.2,0.1,修改安装文件
编辑 /10201_database_linux32/database/install/oraparam.ini

### #[Certified Versions]

Linux=redhat-3,SuSE-9,redhat-4,centos-5,UnitedLinux-1.0,asianux-1,asianux-2

再添加
[Linux-centos-5.1-optional]
TEMP_SPACE=80
SWAP_SPACE=150
MIN_DISPLAY_COLORS=256



/etc/oratable配置文件，solaris 是/var/opt/oracle/oratab文件
文件格式
$ORACLE_SID:$ORACLE_HOME:<N|Y>:
于是打开这个文件，将最后一行的最后一个字符由 “N” 改为 “Y”，如下：
orcl: /u01/app/oracle/product/10.2.0.1:Y

dbstart也会自动启动监听 ,如果名字不是默认的 LICENER 要修改脚本 
编辑 dbstart
应该是在88行，将其改为：
$ORACLE_HOME_LISTNER/bin/lsnrctl start 后加监听名字


--开机启动Oracle 的脚本看 dbstart
sqlplus /nolog <<EOF
conn / as sysdba
startup
EOF


配置自动启动oracle的脚本
编辑etc/rc.d/rc.local

echo "Starting ORACLE 10g:"
su - oracle -c "/u01/app/oracle/product/10.2.0.1/bin/lsnrctl start"
su - oracle -c "/u01/app/oracle/product/10.2.0.1/bin/dbstart"
-------------------------------------





============= GoldenGate  
 可 Oracle MySQL 间的数据复制,
 
 Oracle数据库自身没有导出csv这种纯文本格式文件的功能,sqlplus spool功能是工具提供的(网上有人自已写存储过程) ,有sqlldr导入csv功能
 还有Studio 工具，和for Big Data是把各种数据库中的数据导入到大数据产品中 
 
 从源数据库 把数据导出文件中 (能过日志文件,导出的动作叫Capture，文件叫Trail) 
 trail文件通过网络传到目标机器导入数据库中 (导入的动作叫Delivery) 
 
 可把多方向来的数据放在一个库
 也可把一个库分发到多个库
 也可三个库做环式复制
 
 
 

----------------------------- 安装  GoldenGate  12.3.0.1  Oracle 端
 ./runInstaller 要求有 图形界面
 
 mkdir /u02/goldenGateOracle   		 // 如放/u01报过和Oracle相同目录
 chown ogg:ogg /u02/goldenGateOracle
 
 复制示例 按注释提示修改 
cp  response/oggcore.rsp  myogg.rsp
vi  myogg.rsp
	#注释提示有不让修改的Do not change
	  INSTALL_OPTION=ORA11g
	  SOFTWARE_LOCATION=/u02/goldenGateOracle

	  START_MANAGER=true  (如为true,下面两个要设)
	  MANAGER_PORT=2323    (好像没用)
	  DATABASE_LOCATION=/u01/app/oracle/product/11.2.0/xe
	  
	  INVENTORY_LOCATION=/u02/goldenGateOracle/inventory    (最好不放 SOFTWARE_LOCATION 报目录不空的警告,使用了好像也行/)
	  UNIX_GROUP_NAME=ogg   (INVENTORY目录的组名)

su ogg
. /u01/app/oracle/product/11.2.0/xe/bin/oracle_env.sh
./runInstaller -silent -nowait -responseFile  ~/ogg/myogg.rsp  命令行下安装 (必须绝对路径,必须普通用户,也可不加-silent)

-nowait 会后台安装


export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME/lib
cd /u02/goldenGateOracle
./ggsci 就可以用了
GGSCI > CREATE SUBDIRS
GGSCI > sh 调用系统命令
 
GGSCI > edit params mgr   //会 vi   /u01/goldenGateOracle/dirprm/mgr.prm  写入 ,mgr是名字
PORT 7809


执行 start mgr

GGSCI > view report mgr    //report是日志
GGSCI > info  mgr
GGSCI >help add replicat  //其实就是当前目录的help.txt

netstat -anp | grep 7809
ps -ef | grep mgr

 
init-load相同数据库，可以用数据库自带工具
  
---源端 init-load  
 
sqlplus > create user oggone identified by ogg 
sqlplus >  grant connect,resource to oggone
  
 rlwrap  sqlplus oggone/ogg@xe  @demo_ora_create.sql  //自带的示例
 rlwrap oggone/ogg@xe   
  

sqlplus > alter database add supplemental log data
sqlplus > alter system switch logfile
sqlplus >desc V$database;  有
	 SUPPLEMENTAL_LOG_DATA_MIN 
	 SUPPLEMENTAL_LOG_DATA_PK 
	 SUPPLEMENTAL_LOG_DATA_UI	
sqlplus > select supplemental_log_data_min from v$database;

GGSCI > dblogin userid system@xe, password sys    格式 dblogin userid <> , password <>  
//如和oracle是不同系统用户报ORA-12547: TNS:lost contact ,用户使用 system@xe 就可以了

GGSCI > add trandata oggone.tcustmer      警告找不到 schematrandata 函数
GGSCI > add trandata oggone.tcustord   
GGSCI > help add trandata

GGSCI > add extract einikk, sourceistable  // 名字为einikk  sourceistable表示初始数据的同步
GGSCI > help add extract
GGSCI > edit params einikk   //其实是 /u02/goldenGateOracle/dirprm/einikk.prm -- 是注释，最好不要有中文
	-- this is comment
	EXTRACT EINIKK
	-- local db
	USERID system@xe, PASSWORD "sys"   
	-- 可以不用system用户
	RMTHOST <remote-dest-ip>, MGRPORT <remport-dest-port7809>
	RMTTASK REPLICAT, GROUP RINIKK
	TABLE oggone.tcustmer;
	TABLE oggone.tcustord;

	

文档上说必须启用archive ,archive log list 查
SQL> shutdown immediate
SQL> startup mount
SQL> alter database archivelog;
SQL> alter database open;

GGSCI > start extract einikk //启动initial load
GGSCI > view report einikk //看日志 有ERROR肯定不行  ，自己测试init-load成功


 
---目的端 init-load
 sqlplus 建用户,表结构,
 ggsci 安装启动 start mgr
 
 
SQL> create user oggtwo identified by ogg;          
SQL> grant connect ,resource to oggtwo;
SQL>  @demo_ora_create.sql
GGSCI > CREATE SUBDIRS
GGSCI > edit params mgr  
	PORT 7809
	ACCESSRULE, PROG *, IPADDR 172.16.*.*, ALLOW
	-- 12c 新功能必须要加 
GGSCI > start mgr

-- 为initial load ,没有 trail文件 
systemctl stop firewalld

GGSCI > add replicat rinikk,specialrun   // rinikk 对应源端文件里的名
GGSCI > edit params rinikk     // 其实是/u02/goldenGateOracle/dirprm/rinikk.prm
	REPLICAT RINIKK
	ASSUMETARGETDEFS  
	-- 假设目标数据库表结构一致
	USERID system, PASSWORD sys
	-- 可以不用system用户
	DISCARDFILE ./dirrpt/RINIKK.dsc, PURGE
	MAP oggone.*, TARGET oggtwo.*;
	

--- 不知是否一定要
sqlplus > alter database add supplemental log data
sqlplus > alter system switch logfile
 archive log list
SQL> shutdown immediate
SQL> startup mount
SQL> alter database archivelog;
SQL> alter database open;
	
源端做完 initail load 目标端可用 view report rinikk
	

----- 源端 数据同步官方叫Standard Reporting   源端不生成trail文件方试 
 
add extract eorakk, tranlog, begin now, threads 1
(delete extract eorakk 重建)
info extract *
edit params eorakk

文件中写入
	EXTRACT EORAKK
	USERID system@xe, PASSWORD sys
	-- 可以不用system用户
	RMTHOST <remote-dest-ip>, MGRPORT <remport-dest-port7809>
	RMTTRAIL ./dirdat/kk
	--不同之处变  RMTTRAIL 文件名只能2个字母，系统会后加6个数字
	TABLE oggone.tcustmer;
	TABLE oggone.tcustord;
 
目的机器上的文件在源端做
ADD RMTTRAIL ./dirdat/kk, EXTRACT EORAKK, MEGABYTES 5 
(delete RMTTRAIL ./dirdata/kk  没用??)
源端和目的端关联起来

info rmttrail *

目的端是没有kk的文件

start extract eorakk

info all    如正常会变成RUNNING 
info extract eorakk, detail  显示文件位置
view report eorakk  如正常不会有错


 会读oracle目录中的 /u01/app/oracle/fast_recovery_area/XE/onlinelog/o1_mf_1_dzo6lnj5_.log 没权限，和oracle用户不是同一组 
 (delete extract eorakk 重建) ,重启mgr,就可以了
 (清目的端的ggchkptable  ,会影响目的端的启动)
 
  
目的端dirdat下有kk000000000文件


----- 目的端 数据同步官方叫Standard Reporting

edit params ./GLOBALS
加入
CHECKPOINTTABLE system.ggchkptable

表不存下面创建
dblogin userid system, password sys
add checkpointtable  如果失败 ，说明修改GLOBALS文件，要退出ggsci再登录
(DELETE CHECKPOINTTABLE )

add replicat rorakk, exttrail ./dirdat/kk   指明从源端的kk文件  


edit params rorakk
文件中写入
	REPLICAT RORAKK
	USERID system, PASSWORD sys
	-- 可以不用system用户
	HANDLECOLLISIONS
	ASSUMETARGETDEFS
	DISCARDFILE ./dirrpt/RORAKK.dsc, PURGE
	MAP oggone.tcustmer, TARGET oggtwo.tcustmer;
	MAP oggone.tcustord, TARGET oggtwo.tcustord; 

start replicat rorakk
info all  如RUNNING表示启动成功

如报 ERROR  OGG-00446  No data selecting position from checkpoint xxxx
info rorakk 会看到 RBA 的值 和 文件名的序号  
alter replicat rorakk, extseqno <文件名的序号从0开始>, extrba <RBA 的值>
第一次就是
alter replicat rorakk, extseqno 0, extrba 0 


源端insert记录commit后，目的端也会有记录，自己测试成功 

---其它
RBA (Relative Bytes Address)  相对于文件头的偏移字节数


GoldenGate的checkpoint 不同于Oracle的checkpoint
GoldenGate的checkpoint 用于记录位置，当停机时，下次开机时还可以继续读未同步数据


info einikk, showch (ch=checkpoint)
info eorakk, showch
	在 Log Read Checkpoint 组中有显示 Seqno 9 表示Oracle的
	select group#,sequence#,status ,archived from V$log 
	显示9号是current状态

	日志文件在哪 select group#,type,member from v$logfile;  11gXE版本是在 /u01/app/oracle/fast_recovery_area/XE/onlinelog/o1_mf_开头的文件 
	select sequence#,name  from V$archived_log; 11gXE 版本是在  /u01/app/oracle/fast_recovery_area/XE/archivelog/
	
	Read Checkpoint #1 	其中#1表示线程号

	Startup Checkpoint (starting position in the data source):


	Recovery Checkpoint (position of oldest unprocessed transaction in the data source):
		SCN: 0.592464 (592464)
		Oracle SCN号 System Change NO   ,可以把SCN号转换为时间
		select to_char(scn_to_timestamp(592464),'YYYY-MM-DD HH24:MI:SS') from dual;

		insert into tcustmer values('li' 'si','shanghia','SH');
		select start_scn from v$transaction  ; 当有事务运行时可查SCN号
		594725
		
	  linux命令 hexdump -Cv -n 8192  dirchk/EORAKK.cpe > EORAKK.dump 
		-n 指定只对文件前部分大小做分析，防止文件过大
		分析goldenGate的chekpoint文件  ,生成的文件像UltraEdit打开二进制样式
		start_scn 值594725转换成16进制 0x 09 13 25 再把每个字节8位长度为单位即两个16进制数,反排序 0x 25 13 09
		字节的存储方式Big and Little Endian,一般是小端Little Endian，低位字节(目前内存里在右边)放在左边,因书写从左向右
		在EORAKK.dump 文件中可以找到25 13 09 数据
	
	Write Checkpoint #1  组中的 Sequence #: 0 表示trail文件两个字母后面的序号

	select name,open_mode,force_logging,supplemental_log_data_min from v$database;
	alter database force logging ;  就算大量数据操作 no loging也没用
	
	
	如不使用system用户，单独建立表空间，两端都做
	create tablespace goldengate datafile '/u01/app/oracle/oradata/XE/goldengate.dbf' SIZE 100m AUTOEXTEND ON ;
	create user oggadmin identified by oggadmin default tablespace goldengate;
	grant connect, resource,dba  to oggadmin;   //dba有点大,但不知道到底要什么权限
	  
	@role_setup.sql 提示输入schema,oggadmin
	提示 GRANT GGS_GGSUSER_ROLE TO <loggedUser>
	GRANT GGS_GGSUSER_ROLE TO oggadmin
	
	在参数文件中的密码也可以加密存储
	  
----- 源端 数据同步官方叫Standard Reporting 2  源端生成trail文件方试 , 带Data Pump
edit params ex1
	EXTRACT ex1
	USERID oggadmin@xe, PASSWORD oggadmin
	EXTTRAIL /u02/goldenGateOracle/dirdat/ex
	TABLE oggone.*;
	
edit params dp1 (data pump进程)	
	EXTRACT dp1
	USERID oggadmin@xe, PASSWORD oggadmin
	RMTHOST <remote-dest-ip>, MGRPORT <remport-dest-port7809>
	RMTTRAIL /u02/goldenGateOracle/dirdat/rt
	TABLE oggone.*;
dblogin userid oggadmin@xe, password oggadmin

add trandata oggone.tcustmer   
add trandata oggone.tcustord 

add extract ex1, tranlog,begin now
add exttrail /u02/goldenGateOracle/dirdat/ex,EXTRACT ex1  关联起来

add extract dp1,EXTTRAILSOURCE /u02/goldenGateOracle/dirdat/ex
add RMTTRAIL  /u02/goldenGateOracle/dirdat/rt , extract dp1  远端和本地关联起来
ls dirdat
start mgr
start * 除mgr外的所有启动
ls dirdat 有文件了
strings dirdat/ex000000 | grep    二进制文件中显示可打印字符


----- 目标端 数据同步官方叫Standard Reporting 2
edit params rt1  
	REPLICAT rt1
	USERID oggadmin@xe, PASSWORD oggadmin 
	-- HANDLECOLLISIONS
	ASSUMETARGETDEFS
	DISCARDFILE /u02/goldenGateOracle/dirrpt/rt1.dsc, PURGE
	MAP oggone.*, TARGET oggtwo.*; 

edit params ./GLOBALS
	GGSCHEMA oggadmin
	CHECKPOINTTABLE oggadmin.checkpointtable
	
select sid,username,program from V$session where username is not null;

GGSCI>dblogin userid oggadmin@xe, password oggadmin
GGSCI>add checkpointtable oggadmin.checkpointtable

add replicat rt1,exttrail /u02/goldenGateOracle/dirdat/rt, checkpointtable oggadmin.checkpointtable
info all
ls dirdat
start mgr
start replicat rt1  (可能之前源端要先启)
ls dirdat 有文件了
 
strings dirdat/rt000000 | grep    二进制文件中显示可打印字符
 
-----   2 部分   自己手工做测试成功 

 

-------------Python 2.7
./configure 
make
make install



-----apache2
apache   ./configure -enable-so
  --sysconfdir=/etc/   --enable-ssl  --enalbe-modules
 
	make 
	make install
	
---------apache2 安装proxy http_proxy  可以做 LoadBalance

如果安装时已经使用--enable-proxy --enable-proxy-http --enable-ssl  
不用加 LoadModule proxy_module 和 LoadModule proxy_http_module

下面是对安装时未使用上面的编译选项

定位到Apache源码的 modules/proxy 目录
#/usr/local/apache2/bin/apxs -c -i -a -n proxy  mod_proxy.c proxy_util.c   或者用下面两条命令

-i install ,-a all ,-n modname ,-c compile

编译相应模块：--OK
# /usr/local/apache2/bin/apxs -c  mod_proxy.c proxy_util.c
加载模块：--OK
# /usr/local/apache2/bin/apxs -i -a -n proxy mod_proxy.la




httpd.conf自动添加了如下语句：
LoadModule proxy_module        modules/mod_proxy.so
module 文件夹中也生成了相应的 mod_proxy.so 模块

需要 http
#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_http.c   或者用下面两条命令

# /usr/local/apache2/bin/apxs -c mod_proxy_http.c
# /usr/local/apache2/bin/apxs -i -a -n proxy_http mod_proxy_http.la

LoadModule proxy_http_module modules/mod_proxy_http.so
module 文件夹中也生成了相应的 mod_proxy_http.so 模块



ProxyRequests On
<Proxy *>
	Order deny,allow
	Allow from all
</Proxy>
ProxyPass	 /mdm	http://localhost:7001/mdm
ProxyPassReverse /mdm	http://localhost:7001/mdm



-----tomcat-connectors-1.2.42
tomcat-connectors-1.2.42-src.tar.gz  是linux 版本

# cd tomcat-connectors-1.2.42-sr/native
# ./configure  --prefix=/usr/local/tomcat-connector --with-apxs=/usr/local/apache2/bin/apxs  --with-java-home=/usr/java/jdk1.7.0_75
# make
# cp ./apache-2.0/mod_jk.so /usr/local/apache2/modules/

 

cd /usr/local/apache2/conf/ 
建立两个配置文件mod_jk.conf和workers.properties。

# vi mod_jk.conf

指出mod_jk模块工作所需要的工作文件workers.properties的位置
JkWorkersFile /usr/local/apache2/conf/workers.properties
JkLogFile /usr/local/apache2/logs/mod_jk.log

# Set the jk log level [debug/error/info]
JkLogLevel info

# Select the log format
JkLogStampFormat "[%a %b %d %H:%M:%S %Y]"

# JkOptions indicate to send SSL KEY SIZE,
JkOptions  +ForwardKeySize +ForwardURICompat -ForwardDirectories

# JkRequestLogFormat set the request format
JkRequestLogFormat "%w %V %T"

#----对一个Tomcat的配置
# 将所有servlet 和jsp请求通过ajp13的协议送给Tomcat，让Tomcat来处理
JkMount /servlet/*  worker1
JkMount /*.jsp worker1


################JkMount /*.jsp  worker_jsp 对如果有虚拟机pts ,不能用/* 这样会所有虚拟机全部拦截
		JkMount	 /*.action worker_jsp
		JkMount	!/*.php
	可Include mod_jk.conf文件放入在<VirtualHost >中


# vi workers.properties     

# Defining a worker named worker1 and of type ajp13
worker.list=worker1

# Set properties for worker1
worker.worker1.type=ajp13 
worker.worker1.host=localhost 
#ajp13端口,tomcat中server.xml默认是8009
worker.worker1.port=8009  
worker.worker1.lbfactor=50 
worker.worker1.cachesize=10 
worker.worker1.cache_timeout=600 
worker.worker1.socket_keepalive=1 
worker.worker1.socket_timeout=300



在httpd.conf文件中加
LoadModule jk_module modules/mod_jk.so
Include /usr/local/apache2/conf/mod_jk.conf

---下面的可以不配置
chmod 755  tomcat-8.5.6/bin/*.sh

最后编辑Tomcat的配置文件server.xml，在HOST段中加入：
<Context path="" docBase="/var/wwwroot" debug="0" reloadable="true" crossContext="true"/>

<Directory "/var/wwwroot/WEB-INF">  ###WEB-INF内容不可仿问  
    Order deny,allow
    Deny from all
</Directory>


如JK报错,/etc/apache2/logs/jk-runtime-status ,是由/etc/apache2/下没有logs目录所导至的


=========一个apache mod_jk.so 多个tomcat  版本8测试成功==============
---负载均衡
修改多台机器的Tomcat的监听端口,默认的8080和默认的8009

mod_jk.conf 文件中
JkMount /*.jsp controller

workers.properties 文件中
worker.list = controller,tomcat1,tomcat2  #server 列表
#========tomcat1========
worker.tomcat1.port=8009       #ajp1.3 端口号，在tomcat下server.xml <Connector port=  配置,默认8009
worker.tomcat1.host=localhost  #tomcat的主机地址，如不为本机，请填写ip地址
worker.tomcat1.type=ajp13
worker.tomcat1.lbfactor = 1   #server的加权比重，值越高，分得的请求越多
#========tomcat2========
worker.tomcat2.port=9009       #ajp1.3 端口号，在tomcat下server.xml <Connector port= 配置,默认8009
worker.tomcat2.host=localhost  #tomcat的主机地址，如不为本机，请填写ip地址
worker.tomcat2.type=ajp13
worker.tomcat2.lbfactor = 1   #server的加权比重，值越高，分得的请求越多

#========controller,负载均衡控制器========
worker.controller.type=lb
worker.controller.balanced_workers=tomcat1,tomcat2   #指定分担请求的tomcat
worker.controller.sticky_session=1		 
#worker.controller.sticky_session=true  #或者用true  表示相同的SESSION ID 跳到相同的workder(如果这个worker挂了就不行了,要做集群)

---集群

session复制,集群内的tomcat都有相同的session
集群后,要进行session复制,导致速度较慢。Tomcatd的复制，目前不支持application复制


分别修改每个tomcat 8 配置conf/server.xml
现有的<Cluster>标签做如下变动  ,可以从文档上cluster-howto.html复制最新
  <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"
                 channelSendOptions="8">

          <Manager className="org.apache.catalina.ha.session.DeltaManager"
                   expireSessionsOnShutdown="false"
                   notifyListenersOnReplication="true"/>

          <Channel className="org.apache.catalina.tribes.group.GroupChannel">
            <Membership className="org.apache.catalina.tribes.membership.McastService"
                        address="228.0.0.4"
                        port="45564"
                        frequency="500"
                        dropTime="3000"/>
            <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
                      address="auto"
                      port="4000"
                      autoBind="100"
                      selectorTimeout="5000"
                      maxThreads="6"/>

            <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
              <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
            </Sender>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor"/>
          </Channel>

          <Valve className="org.apache.catalina.ha.tcp.ReplicationValve"
                 filter=""/>
          <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>

          <Deployer className="org.apache.catalina.ha.deploy.FarmWarDeployer"
                    tempDir="/tmp/war-temp/"
                    deployDir="/tmp/war-deploy/"
                    watchDir="/tmp/war-listen/"
                    watchEnabled="false"/>

          <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
        </Cluster>
		
		
在<Engine name="Catalina" defaultHost="localhost" jvmRoute="tomcat2"> 中修改jvmRoute的值　，两个Tomcat对应修改    

应用的web.xml加入  <distributable/>

tomcat的session同步功能需要用到组播(MultiCast 地址配置的是 228.0.0.4 ),windows默认情况下是开通组播服务的，
但是linux默认情况下并没有开通,	route add -net 224.0.0.0 netmask 240.0.0.0 dev eth0
启动时开通组播在/etc/sysconfig/static-routes文件内加入eht0 net 224.0.0.0 netmask 240.0.0.0



=========一个apache proxy_balancer 多个tomcat  负载均衡==============
到apache 的源码解压 modules/proxy 目录

#/usr/local/apache2/bin/apxs -c -i -a -n proxy mod_proxy.c proxy_util.c
#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_balancer.c
#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_http.c

LoadModule proxy_module		modules/mod_proxy.so  
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so  
LoadModule proxy_http_module	modules/mod_proxy_http.so  


ProxyRequests Off 
 <Proxy balancer://mycluster>  
     BalancerMember http://node-a.myserver.com:8080  
     BalancerMember http://node-b.myserver.com:8080  
 </Proxy>  
 ProxyPass /myweb  balancer://mycluster/myweb      

#警告：绝不要添加到生产环境中！！！  http://localhost/balancer-manager/监视负载均衡的工作情况的,
# <Location /balancer-manager>  
#     SetHandler balancer-manager  
#     order Deny,Allow  
#     Deny from all  
#     Allow from localhost  
# </Location>  


 ProxyRequests Off  
 <Proxy balancer://mycluster>  
     BalancerMember http://node-a.myserver.com:8080 loadfactor=7  
     BalancerMember http://node-b.myserver.com:8080 loadfactor=2  
     ProxySet lbmethod=bytraffic  
 </Proxy>  
 ProxyPass /myweb   balancer://mycluster/myweb  
 


#loadfactor 参数取值范围为1-100
lbmethod=byrequests 按照请求次数均衡(默认)
lbmethod=bytraffic 按照流量均衡
lbmethod=bybusyness 按照繁忙程度均衡(总是分配给活跃请求数最少的服务器) 


---集群
ProxyRequests Off  
<Proxy balancer://mycluster>  
     BalancerMember http://node-a.myserver.com:8080  
     BalancerMember http://node-b.myserver.com:8080 status=+H  
</Proxy>  
ProxyPass /myweb   balancer://mycluster/myweb    


status=+H
请求总是流向 node-a ，一旦node-a挂掉， Apache会检测到错误并把请求分流给 node-b。Apache会每隔几分钟检测一下 node-a 的状况，如果node-a恢复，就继续使用node-a。

--OK 但不能保存session,除非只有一台在用,要用 ajp://

-----------使用ajp://  -----------
#/usr/local/apache2/bin/apxs -c -i -a mod_proxy_ajp.c
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so 　##报错??

./configure  --prefix=/usr/local/apache2 --enable-so \
 --enable-proxy  --enable-proxy-ajp --enable-proxy-balancer --enable-proxy-connect \
 --enable-proxy-connect \
 --enable-proxy-ftp     \
 --enable-proxy-http    \
 --enable-proxy-scgi   \
 --enable-ssl            

httpd -l查看

ServerName mdm-server # 是hostname的值 


/usr/local/apache2/bin/apxs -c -i -a mod_proxy_ftp.c ##OK
LoadModule proxy_ftp_module modules/mod_proxy_ftp.so 

#tomcat的AJP 默认端口是8009

ProxyRequests Off
<proxy balancer://cluster> 
	BalancerMember ajp://127.0.0.1:8009 loadfactor=1 route=tomcat1  ##tomcat集群
	BalancerMember ajp://127.0.0.1:9003 loadfactor=1 route=tomcat2
</proxy>
ProxyPass	 /myweb    balancer://cluster/myweb  stickysession=jsessionid nofailover=On 
ProxyPassReverse /myweb    balancer://cluster/myweb


Tomcat 的　server.xml   , 可以从文档上cluster-howto.html复制最新
  <Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster"
                 channelSendOptions="8">

          <Manager className="org.apache.catalina.ha.session.DeltaManager"
                   expireSessionsOnShutdown="false"
                   notifyListenersOnReplication="true"/>

          <Channel className="org.apache.catalina.tribes.group.GroupChannel">
            <Membership className="org.apache.catalina.tribes.membership.McastService"
                        address="228.0.0.4"
                        port="45564"
                        frequency="500"
                        dropTime="3000"/>
            <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
                      address="auto"
                      port="4000"
                      autoBind="100"
                      selectorTimeout="5000"
                      maxThreads="6"/>

            <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
              <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
            </Sender>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
            <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor"/>
          </Channel>

          <Valve className="org.apache.catalina.ha.tcp.ReplicationValve"
                 filter=""/>
          <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>

          <Deployer className="org.apache.catalina.ha.deploy.FarmWarDeployer"
                    tempDir="/tmp/war-temp/"
                    deployDir="/tmp/war-deploy/"
                    watchDir="/tmp/war-listen/"
                    watchEnabled="false"/>

          <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
        </Cluster>
		
<Engine name="Catalina" defaultHost="localhost" jvmRoute="tomcat2">  ###对应修改    

应用的web.xml加入  <distributable/>



<VirtualHost>中可以使用
 ProxyPass 
 ProxyPassReverse 


ab -n 100 -c 10 http://127.0.0.1:8080/   打压力
-n 请求总数
-c 并发数

============================apache2 使用========================

源码安装 依赖于 Apache APR  (Apache Portable Runtime ) 
cd apr-1.5.2
./configure  其实安装在 /usr/local/apr目录中
make
make install

cd apr-util-1.5.4
./configure --with-apr=/usr/local/apr
make
make install

cd pcre-8.39	
./configure
make 
make install

cd httpd-2.4.23
./configure  其实安装在 /usr/local/apache2 目录中
make 
make install


http://doc.javanb.com/apache-http-server-version-2-2-cn/sitemap.html

检查httpd.conf 语法-windows:
	httpd -t
	或者：
	httpd.exe -w -t -f "C:\Apache2.2\conf\httpd.conf" -d "C:\Apache2.2\."

检查httpd.conf 语法-linux:
	apachectl configtest
	或
	apache2ctl configtest



SSL Secure Socket Layer 有openssl ,modssl

顶层 HTTP ,POP,SMTP
中层 SSL(HTTPS,POP3S,SMTPS)
底层 TCP
最底层IP

/etc/rc.local 开机启动执行,可加自动启动apache

Listen 80
ServerRoot
DocumentRoot
MaxClients 最大的客户数(同时)

对<IfMoudle prefork.c>可以用
/usr/local/apache2/bin/httpd -l  列出apache内部的模块

User nobody  # 一定要有仿问目录的权限,r_x,可以看日志
Group nobody
子进程使用的用户来执行
启动apache要用root,setuid()改变子进程的身份



Errorlog log/error_log
LogLevel warn
DirectoryIndex index.html 文件夹索引
AddDefaultCharset　　UTF-8  (iso-8859-1) #默认返回页面的编码,浏览器可以改为UTF-8(系统是UTF-8), 可以把它注释,这样浏览器,jsp程序可以自动认识
Alias /xx /var/www/xx

locale 命令来看编码

killall -HUP httpd 也可以生启apache
<Directory />
#中没有仿问权限设置,默认是拒绝的,(也有的子)
Options Indexes #表示如果没有index.html (DirectoryIndex定义的)就列表显示它
Allow from 127. #127这个网段可以仿问 ,all
</Directory>

cgi  可以用任何来解释执行(bash,perl)  ,第一行必须声明content-type 再加一个换行 
如perl 用
	#!/usr/local/bin/perl　
	print "Content-type: text/plain\n\n";
如bash 用
	#!/bin/bash  
	echo "content-type :text-plain"
	echo 

ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"  


# 基于主机名的虚拟主机 (一个IP地址，多个网站)
# 基于IP地址的虚拟主机 (每个站点拥有一个的独立IP地址)，


可以多个域名用同一个IP

NameVirtualHost 192.168.1.104:80	#这三个ＩＰ地址是一样的　 两域名，相同IP，
<VirtualHost 192.168.1.104>		#这三个ＩＰ地址是一样的
	ServerAdmin	root@example.com
	DocumentRoot /var/www
	ServerName	example.com   ###可以用DNS解析到IP(可IP),会替换ServerName 的设置
	ErrorLog  logs/example_error.log
	CustomLog logs/example.log common
	ErrorDocument 404 http://cooling.ape-tech.com/bbs
</VirtualHost>

<VirtualHost 192.168.1.104>		#这三个ＩＰ地址是一样的
	ServerAdmin	root@test.com
	DocumentRoot /var/test
	ServerName	test.com
	ErrorLog  logs/test_error.log
	CustomLog logs/test.log common
	ErrorDocument 404 http://cooling.ape-tech.com/bbs
</VirtualHost>

如仿问的不是上两个域的网址,对:80会显示第一个VirtualHost 的主目录(DocumentRoot)
如是:443就不是VirtualHost,而是

VirtualHost也可以加SSL ,再 /etc/ssl.conf 文件中修改
	SSLEngine on ##开关

<VirtualHost>中可以用<Proxy>


----


Alias  /test /var/www/test
<Directory /var/www/test>
	Options  ALL ##ExecCGI(可运行CGI程序 ),FollowSymLinks(支持符号链接访问其它目录),Includes(可使用SSL),IncludeNOEXEC(可SSL 不可CGI),Indexes(可列目录无DirectoryIndexes参数指定的文件如index.html),SymLinksIfOwnerMath(目标文件和目录属于同一用户可以符号链接)
	AllowOveride AuthConfig
	AuthName "显示的标题"
	Authtype Basic
	AuthUserFile /var/www/test/.htpasswd
	require valid-user  (htpaswd -c /var/www/test/.htpasswd mike  来增加mike,第一次加 -c, -m修改, )
	
	Order allow,deny   (较安全的,如  deny,allow 不在deny 中的都可以访问  ,(只考虑DENY))
	
	Allow from all
	Deny from xxx.com
</Directory>

UserDir disable  如为public_html(用户user1主目录下的目录,/home/user1/public_html),可以http://www.xx.com/~user1来访问
AccessFileName .htaccesss(访问控制文件)
		<Files ~ "^.ht">  ##不可任何人看到.ht的文件
			Order allow,deny
			Deny from all 
		</Files>
TypesConfig  /etc/mime.types
DefaultType text/plain  (如二进制文件被认为文本,application/x-octet-stream)
分析文件要 加载模块
<IfMoudle mod_mime_magic.c>
	MIMEMagicFile conf/magic
</IfMoudle>
	
AddType application/x-httpd-php   .php
ErrorLog logs/error_log
LogLevel warn   (debug,info,notice,warn,crit,alert,emerg)
LogFormat ".........."
CustomerLog logs/access_log combined
%a 远程IP
%b 发送字节
%h 远程主机
%l 远程登录名
%r 客户机请求的第一行
%s 状态
%t 时间
%u 远程用户
referrer 点击页面
user-agent 浏览器

ServerSignature On  在页面底部加服务名,版本,Email

Redirect permanent /foo  http://www.xx.com  访问不存在的项目时跳到页面


IndexOptions FancyIndexing VersionSort NameWith=* (按适合的宽度显示文件名)
列表的显示方式   
AddIcon /icons/xxx .exe .bin
DefaultIcon /icons/unknow.icn

DefaultLanguage 


<Location /server-status>
	SetHandler server-status
	Order deny,allow
	Deny from all
	Allow from 192.168.1.1
</Location>

<Location /server-info>
	SetHandler server-info
	Order deny,allow
	Deny from all
	Allow from 192.168.1.1
</Location>
就可以用 http://localhost/server-status (server-info) 看到信息




可每个守护进程来支持虚拟机




如何https (443),TLSV1.2,TLS( Transport Layer Security )最新版本1.2

ssl       执行httpd -l 有mod_ssl.c
<IfMoudle mod_ssl.c>
还要看 /etc/ssl.conf文件
	Listen 443
</IfMoudle>	
/usr/local/bin/apachectl -D /##startssl 来开启SSL ,查443端口,没有

ssl.conf文件

SSLCertificateFile /etc/ssl.crt/server.crt 证书
SSLCertificatekeyFile  /etc/ssl.key/server.key 私钥
SSLCertificatechainFile



openssl  genrsa -out /etc/ssl.key/server.key 1024(长度) //输出到文件
openssl  req(请求) -new(新建) -x509 (格式) -key (前面的key) 
	/etc/ssl.key/server.key(和上条命令的路径一样) -out /etc/ssl.crt/server.crt
   按提示输入一些信息

/usr/local/bin/apachectl startssl 
查443端口 ,发现有了

httpd -k stop/start/restart


bin/ab 压力测试
KeepAlive On //断点续传

ExtendedStatus On
<Location /server-status>  
SetHandler server-status   ##会在目录下显示服务状态下
Order deny,allow
Deny from all
Allow from 192.xxxxx
</Location>


<Location /server-status>  
SetHandler server-status   
Order deny,allow
Allow from all
authtype basic
authname "xxx"
authuserfile "/.htpasswd"
required valid-user
</Location>


htpasswd命令 -c  (Create New File)  -s (SHA加密密码)
./apachectl configtest 来看错误
============apache2 上==============================================

============== MemCache  (memcached-1.4.17)
文档在google上

依赖于libevent(libevent-2.0.21), 如linux内核要有epoll
安装libevent  
./configure && make
make install
 
安装MemCache
./configure --with-libevent=/usr/local
make
make install

/usr/local/bin/memcached -h

启动Memcache的服务器端：
memcached -d -m 10   -u root -l 127.0.0.1 -p 12000 -c 256 -P /tmp/memcached.pid
-d 做服务端
-m 以M为单位的最大内存
-u user 只对root用户运行命令
-p 端口
-l 监听IP,本机IP
-c 最大连接数
-P PID文件只对-d同时有效
-f 增长因子 默认1.25
-vv very verbose
服务器监听端口,通过一定的协议交互来写入数据到服务器内存中


memcached -help 
memcached  -m 64    -l 127.0.0.1 -p 12000 -c 256 -vv (windows版本)
telnet 127.0.0.1 12000
	windows下按ctrl +] 打开回显功能 ->回车
windows下如何命令写错只能新写命令

add <key> <flag> <expire秒或时间戳.0不自动删也可能被删> <值的length>
add new  0  0 5 
回车后输入5个字符值hello后,显示STORED
get new 取值

delete <key> <可选秒数> 表示 删除而且几秒内不能使用同名的键 

replace 修改同add参数,只可对已经存在
set 相当于add 和 replace
set age 0 0 2
输入 18
incr age 1
decr age 1  因是无符号的,不可能<0
stats  显示状,可以看命中数
flush_all  后stats 显示curr_items还有值(过期后并没有删除,只当get时才判断如果过期则删除,再看stats就减少,或者有新值要占用直接用就好),一种惰性删除

防止内存的碎片更少
预先分组多个大小约相同的slab ,每组slab 中 的chunk大小不同,按-f参数来增长,启动可以看日志
在同一个slab 中 chunck 相同
不在同一个slab 中chunck不相同
chunk 存储选用最小,如果还是有空闲空间,是不可避免的
如果当前最小chunk所在slab已经满了,就把老chunk数据踢除(惰性过期 和LRU最近最少使用即多少次没被使用最大的,FIFO,删除)

Key长度限制250字节
Value限制1M

------------硬盘安装linux Fedora-10
和Redhat一样,但在选择时
输入install.img文件的位置,默认是/images/install.img,否则要输入地址,可以用/开头
一定要在 /下 images 前不可加文件夹,要和ISO放在同一个分区,否则会找不到ISO文件(最好先find确定)
------------

================FastDFS-5.08
国产
	logger.h 是依赖 libfastcommon 下载安装 ./make.sh  ./make install
./make.sh  
./make install
cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.conf
修改 base_path=/opt/fastdfs/tracker
默认 port=22122
默认http.server_port=8080

# /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart   
没有监听8080 ????

cp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.conf
修改 base_path=/opt/fastdfs/storage
默认 port=23000

# /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart

cp /etc/fdfs/client.conf.sample  /etc/fdfs/client.conf 
修改 base_path=/opt/fastdfs/client
	 tracker_server=127.0.0.1:22122

# /usr/bin/fdfs_test /etc/fdfs/client.conf upload /usr/include/stdlib.h

# /usr/bin/fdfs_monitor <client_conf_filename>


---
http.anti_steal.check_token=true
http.anti_steal.secret_key=123456 

=================iptables 被 nftables 替代

一个数据据包有 源地址,目标地址,协议

iptables -A INPUT -p(protocol) icmp -j (jump)DROP  (Target,DROP,ACCEPT ,REJECT,LOG)

icmp不可ping一个地址

ip6tables -L
iptables -L -n 显示 数字IP
iptables -S  显示，像 iptables-save 格式

iptables -F (flush)    清空规则
-D delete  从一开始
-A append
-I --insert
-Z 清零(包的个数)
-N --new 新建一个链
-X 删自己的链
-P 大P 改变默认

-p 小p 协议 可用! 来排除
-s --source	
--sport 源 
-d --destination 
--line-numbers 显示链的编号
-v --verbose	


链，INPUT，OUTPUT，FORWARD(对其它机器服务,的来源和目录都不是自己)

保证SSH 服务正常
iptables -A INPUT  -p tcp   (-d 127.0.0.1)   --dport 22 -j ACCEPT  () 中可省,INPUT的目标地址,OUTPUT的源地址是本机IP
iptables -A OUTPUT -p tcp   (-s 127.0.0.1)   --sport 22 -j ACCEPT


iptables -P INPUT DROP  改变默认 -P 所有的 INPUT 都DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP
 
配置文件  /etc/sysconfig/iptables

iptables-save > /etc/sysconfig/iptables
相应的有 iptables-restore


/etc/services 找domain为53端口的是DNS

为了可用使用DNS来上网,
iptables -A OUTPUT -p udp --dport 53 -j ACCEPT
iptables -A INPUT -p udp --sport 53 -j ACCEPT  如果自己是DNS服务器没有指定目标端口是53,采用默认DROP

iptables -D INPUT 5 删INPUT第5行

为了本机可正常工作
iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT  

^IN^OUT 或者
iptables -A OUTPUT -s 127.0.0.1 -d 127.0.0.1  -j ACCEPT

^oldchar^newchar   替换上一次执行过的命令中的字符


iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT	(-sport 服务器)
-m state --state ESTAbLISHED 表示只响应有过请求的包,对没有请求过的包,不可出 m match

iptables -D OUTPUT 1
做为服务器删上一个OUTPUT 22 的链 ,

做客户机
iptables -A OUTPUT -p tcp --dport 22 -j ACCEPT   (--dport)
iptables -A INPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT

service iptables save
service iptables start/stop/restart/status/condrestart/panic/save
　

iptables -A INPUT  -p tcp   --dport 22 -j ACCEPT 
iptables -A OUTPUT -p tcp   --sport 22 -j ACCEPT
iptables -I INPUT -p tcp --dport 25 -j ACCEPT ##SMTP

iptables -A INPUT  -p icmp   -j ACCEPT 
iptables -A OUTPUT -p icmp   -j ACCEPT

iptables -P INPUT DROP  
iptables -P OUTPUT DROP
iptables -P FORWARD DROP 
 
iptablse -A INPUT -p tcp -dport 22 -j  LOG --log-level 5 --log-prefix "iptables::" ###记录日志 --prefix 并不是最前的
要确保前方没有DROP, 或者ACCEPT 的规则对应的包,并在其它对应的ACCEP规则的前面才有效 


局域网地址反译到互联网地址时，叫NAT

SNAT 源地址转换,只能发生在POSTROUTING
DNAT 目标地址转换  只能发生在PREROUTING

iptables -t nat -L -n 来显示    nat表中的信息
iptables -t nat -A POSTROUTING -s 10.0.0.0/24(24=255.255.255.0) -j SNAT --to-source 192.168.0.254
iptables -t nat -A POSTROUTING -s 10.0.0.0/24 -j MASQUERADE 违装(masquerade 化装)

iptables -t nat -A PREROUTING -d 10.0.0.254 -p tcp -dport 80 -j DNAT --to-destination 192.168.0.1


普通用户不能监听1024以下端口 
1.iptables -t nat -A PREROUTING -p tcp --dport <低端口> -i eth0 -j REDIRECT --to-port <原先监听的高端口> 


iptables -L
iptables -F 就可ssh登录了
iptables -P INPUT  ACCEPT
iptables -P OUTPUT  ACCEPT
iptables -P FORWARD  ACCEPT

iptables -A INPUT  -p tcp   --dport 22 -j ACCEPT 
iptables -A OUTPUT -p tcp   --sport 22 -j ACCEPT
也不能sftp传文件 

iptables -t nat -L -n